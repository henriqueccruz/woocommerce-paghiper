{"version":3,"file":"admin.min.js","sources":["../../src/js/interface/admin.js"],"sourcesContent":["jQuery(function ($) {\n    'use strict';\n\n    // --- ELEMENTOS E INPUTS HIDDEN ---\n    const container = $('#paghiper-due-date-container');\n    if (!container.length) return;\n\n    const modeToggle = $('#due-date-mode-toggle');\n    const daysSection = $('#days-mode-section');\n    const minutesSection = $('#minutes-mode-section');\n\n    // Classe para gerenciar dígitos do odômetro\n    class OdometerDigit {\n        constructor(value, isLast = false) {\n            this.element = $('<div class=\"odometer-digit\">');\n            this.innerElement = $('<div class=\"odometer-digit-inner\">');\n            this.currentValue = parseInt(value, 10);\n            this.isLast = isLast; // último dígito pode rolar infinitamente\n\n            this.element.append(this.innerElement);\n            this.updateDisplay();\n        }\n\n        updateDisplay() {\n            this.innerElement.html(`\n                <span class=\"odometer-digit-value\">${this.currentValue}</span>\n                <span class=\"odometer-digit-value\">${this.getNextValue(1)}</span>\n                <span class=\"odometer-digit-value\">${this.getNextValue(-1)}</span>\n            `);\n        }\n\n        getNextValue(direction) {\n            if (this.isLast) {\n                let next = this.currentValue + direction;\n                if (next > 9) next = 0;\n                if (next < 0) next = 9;\n                return next;\n            }\n            return this.currentValue;\n        }\n\n        setValue(newValue, direction) {\n            if (newValue === this.currentValue) return false;\n\n            const className = direction > 0 ? 'rolling-up' : 'rolling-down';\n            this.element.addClass(className);\n            \n            setTimeout(() => {\n                this.currentValue = newValue;\n                this.updateDisplay();\n                this.element.removeClass(className);\n            }, 200);\n\n            return true;\n        }\n    }\n\n    // Classe para gerenciar grupos de dígitos\n    class OdometerDisplay {\n        constructor(element, initialValue, maxValue = 99) {\n            this.container = $(element);\n            this.maxValue = maxValue;\n            this.value = initialValue;\n            this.digits = [];\n            \n            // Criar wrapper\n            this.wrapper = $('<div class=\"odometer-display\">');\n            this.container.html(this.wrapper);\n            \n            // Criar dígitos\n            const valueStr = this.value.toString().padStart(2, '0');\n            for (let i = 0; i < valueStr.length; i++) {\n                const digit = new OdometerDigit(valueStr[i], i === valueStr.length - 1);\n                this.digits.push(digit);\n                this.wrapper.append(digit.element);\n            }\n        }\n\n        setValue(newValue, animate = true) {\n            if (newValue === this.value) return;\n            \n            // Garantir limites\n            newValue = Math.max(0, Math.min(newValue, this.maxValue));\n            \n            const oldStr = this.value.toString().padStart(2, '0');\n            const newStr = newValue.toString().padStart(2, '0');\n            \n            // Atualizar cada dígito\n            for (let i = 0; i < this.digits.length; i++) {\n                const oldDigit = parseInt(oldStr[i], 10);\n                const newDigit = parseInt(newStr[i], 10);\n                \n                if (oldDigit !== newDigit) {\n                    const direction = newValue > this.value ? 1 : -1;\n                    this.digits[i].setValue(newDigit, direction);\n                }\n            }\n            \n            this.value = newValue;\n        }\n    }\n\n    // Nossos inputs que serão salvos\n    const modeInput = $('#woocommerce_paghiper_pix_due_date_mode');\n    const valueInput = $('#woocommerce_paghiper_pix_due_date_value');\n    \n    // --- LÓGICA DO TOGGLE ---\n    modeToggle.on('change', function() {\n        const isMinutesMode = $(this).is(':checked');\n        daysSection.toggleClass('active', !isMinutesMode);\n        minutesSection.toggleClass('active', isMinutesMode);\n        modeInput.val(isMinutesMode ? 'minutes' : 'days').trigger('change');\n        // Ao trocar, podemos resetar ou converter os valores\n    }).trigger('change');\n\n    // --- LÓGICA DA SEÇÃO \"DIAS\" ---\n    const initialDays = paghiper_settings.due_date_mode === 'days' ? parseInt(paghiper_settings.due_date_value, 10) : 3;\n    const daysOdometer = new OdometerDisplay(daysSection.find('.days-display'), initialDays, 3);\n\n    daysSection.find('.chevron-control').on('click', function() {\n        const direction = $(this).data('action') === 'increment' ? 1 : -1;\n        const newValue = Math.max(1, Math.min(3, daysOdometer.value + direction));\n        \n        if (newValue !== daysOdometer.value) {\n            daysOdometer.setValue(newValue);\n            valueInput.val(newValue).trigger('change');\n        }\n    });\n\n    // --- LÓGICA DA SEÇÃO \"CRONÔMETRO\" ---\n    // (Esta é a parte mais complexa e é um pseudo-código/guia)\n    // Você vai precisar de uma função para converter o total de minutos (salvo no BD) para D/H/M\n    function updateTotalMinutes() {\n        const days = parseInt($('#cron-days').text());\n        const hours = parseInt($('#cron-hours').text());\n        const minutes = parseInt($('#cron-minutes').text());\n        const totalMinutes = (days * 24 * 60) + (hours * 60) + minutes;\n        valueInput.val(totalMinutes).trigger('change');\n    }\n    \n    // Adicionar listeners nos chevrons ou outros controles para o cronômetro\n    // Ex: ao incrementar minutos\n    // let min = parseInt($('#cron-minutes').text());\n    // min++;\n    // if (min > 59) {\n    //   min = 0;\n    //   // Incrementar horas... e assim por diante\n    // }\n    // $('#cron-minutes').text(min);\n    // updateTotalMinutes();\n\n\n    // --- LÓGICA DO CRONÔMETRO ---\n    let chronoOdometers = {\n        days: null,\n        hours: null,\n        minutes: null\n    };\n\n    const chronoLimits = {\n        days: 3,\n        hours: 23,\n        minutes: 59\n    };\n\n    // Inicializa os displays do cronômetro\n    function initChronoDisplays() {\n        let initialValues = { days: 0, hours: 0, minutes: 0 };\n\n        if (paghiper_settings.due_date_mode === 'minutes') {\n            const totalMinutes = parseInt(paghiper_settings.due_date_value, 10);\n            initialValues = {\n                days: Math.floor(totalMinutes / (24 * 60)),\n                hours: Math.floor((totalMinutes % (24 * 60)) / 60),\n                minutes: totalMinutes % 60\n            };\n        }\n\n        chronoOdometers.days = new OdometerDisplay($('#cron-days'), initialValues.days, chronoLimits.days);\n        chronoOdometers.hours = new OdometerDisplay($('#cron-hours'), initialValues.hours, chronoLimits.hours);\n        chronoOdometers.minutes = new OdometerDisplay($('#cron-minutes'), initialValues.minutes, chronoLimits.minutes);\n    }\n\n    initChronoDisplays();\n\n    // Manipuladores para os controles do cronômetro\n    $('.chrono-control').on('click', function() {\n        const unit = $(this).data('unit');\n        const action = $(this).data('action');\n        const direction = action === 'increment' ? 1 : -1;\n        let newValue = chronoOdometers[unit].value + direction;\n\n        // Aplica os limites circulares\n        if (newValue < 0) {\n            newValue = chronoLimits[unit];\n        } else if (newValue > chronoLimits[unit]) {\n            newValue = 0;\n        }\n\n        chronoOdometers[unit].setValue(newValue);\n        updateTotalMinutes();\n    });\n\n\n    // --- VALIDAÇÃO ANTES DE SALVAR ---\n    $('form#mainform').on('submit', function(e) {\n        if (modeInput.val() === 'minutes') {\n            const totalMinutes = parseInt(valueInput.val(), 10);\n            const threeDaysInMinutes = 3 * 24 * 60;\n\n            if (totalMinutes > threeDaysInMinutes) {\n                const useDaysInstead = confirm('Configurações de vencimento superiores a 3 dias no modo cronômetro podem usar mais recursos. Deseja converter para o modo \"Dias\" para melhor performance?');\n                \n                if (useDaysInstead) {\n                    // Prevenir o envio padrão\n                    e.preventDefault();\n                    \n                    // Converter para dias e mudar o modo\n                    const totalDays = Math.ceil(totalMinutes / (24 * 60));\n                    modeInput.val('days');\n                    valueInput.val(totalDays);\n                    \n                    // Enviar o formulário programaticamente após a alteração\n                    // Usar um timeout pequeno pode ajudar a garantir que os valores foram setados\n                    setTimeout(() => $(this).submit(), 100);\n                }\n                // Se o usuário clicar em \"Cancelar\", o formulário envia normalmente.\n            }\n        }\n    });\n});"],"names":["$","modeToggle","daysSection","minutesSection","OdometerDigit","value","isLast","direction","next","newValue","className","OdometerDisplay","element","initialValue","maxValue","valueStr","i","digit","animate","oldStr","newStr","oldDigit","newDigit","modeInput","valueInput","isMinutesMode","initialDays","daysOdometer","updateTotalMinutes","days","hours","minutes","totalMinutes","chronoOdometers","chronoLimits","initChronoDisplays","initialValues","unit","e","threeDaysInMinutes","totalDays"],"mappings":"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"}