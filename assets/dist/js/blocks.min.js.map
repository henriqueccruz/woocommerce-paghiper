{"version":3,"file":"blocks.min.js","sources":["../../src/node_modules/react/cjs/react.production.min.js","../../src/node_modules/react/index.js","../../src/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../src/node_modules/react/jsx-runtime.js","../../src/js/blocks/woocommerce/use-element-options.jsx","../../src/node_modules/validation-br/dist/data/ValidationBRError.js","../../src/node_modules/validation-br/dist/utils.js","../../src/node_modules/validation-br/dist/cnh.js","../../src/node_modules/validation-br/dist/cnpj.js","../../src/node_modules/validation-br/dist/cpf.js","../../src/node_modules/validation-br/dist/judicialProcess.js","../../src/node_modules/validation-br/dist/nup17.js","../../src/node_modules/validation-br/dist/pisPasep.js","../../src/node_modules/validation-br/dist/postalCode.js","../../src/node_modules/validation-br/dist/renavam.js","../../src/node_modules/validation-br/dist/tituloEleitor.js","../../src/node_modules/validation-br/dist/index.js","../../src/js/blocks/woocommerce/elements.jsx","../../src/js/blocks/woocommerce/index.jsx"],"sourcesContent":["/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","const { __ } = window.wp.i18n;\nconst { useState, useEffect, useCallback } = window.wp.element;\n\n/**\n * @typedef {import('../stripe-utils/type-defs').StripeElementOptions} StripeElementOptions\n */\n\n/**\n * Returns the value of a specific CSS property for the element matched by the provided selector.\n *\n * @param {string} selector     CSS selector that matches the element to query.\n * @param {string} property     Name of the property to retrieve the style\n *                              value from.\n * @param {string} defaultValue Fallback value if the value for the property\n *                              could not be retrieved.\n *\n * @return {string} The style value of that property in the document element.\n */\nconst getComputedStyle = ( selector, property, defaultValue ) => {\n\tlet elementStyle = {};\n\n\tif (\n\t\ttypeof document === 'object' &&\n\t\ttypeof document.querySelector === 'function' &&\n\t\ttypeof window.getComputedStyle === 'function'\n\t) {\n\t\tconst element = document.querySelector( selector );\n\t\tif ( element ) {\n\t\t\telementStyle = window.getComputedStyle( element );\n\t\t}\n\t}\n\n\treturn elementStyle[ property ] || defaultValue;\n};\n\n/**\n * Default options for the stripe elements.\n */\nconst elementOptions = {\n\tstyle: {\n\t\tbase: {\n\t\t\ticonColor: '#666EE8',\n\t\t\tcolor: '#31325F',\n\t\t\tfontSize: getComputedStyle(\n\t\t\t\t'.wc-block-checkout',\n\t\t\t\t'fontSize',\n\t\t\t\t'16px'\n\t\t\t),\n\t\t\tlineHeight: 1.375, // With a font-size of 16px, line-height will be 22px.\n\t\t\t'::placeholder': {\n\t\t\t\tcolor: '#fff',\n\t\t\t},\n\t\t},\n\t},\n\tclasses: {\n\t\tfocus: 'focused',\n\t\tempty: 'empty',\n\t\tinvalid: 'has-error',\n\t},\n};\n\n/**\n * A custom hook handling options implemented on the stripe elements.\n *\n * @param {Object} [overloadedOptions] An array of extra options to merge with\n *                                     the options provided for the element.\n *\n * @return {StripeElementOptions}  The stripe element options interface\n */\nexport const useElementOptions = ( overloadedOptions ) => {\n\tconst [ isActive, setIsActive ] = useState( false );\n\tconst [ isFocus, setIsFocus ] = useState( false );\n\tconst [ options, setOptions ] = useState( {\n\t\t...elementOptions,\n\t\t...overloadedOptions,\n\t} );\n\tconst [ error, setError ] = useState( '' );\n\n\tuseEffect( () => {\n\t\tconst color = isActive ? '#CFD7E0' : '#fff';\n\n\t\tsetOptions( ( prevOptions ) => {\n\t\t\tlet showIcon;\n\t\t\t// forced when disabling co-badged cards (for Sources API)\n\t\t\tif ( prevOptions.showIcon === false ) {\n\t\t\t\tshowIcon = { showIcon: false };\n\t\t\t} else if ( typeof prevOptions.showIcon !== 'undefined' ) {\n\t\t\t\tshowIcon = { showIcon: isActive };\n\t\t\t} else {\n\t\t\t\tshowIcon = {};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...prevOptions,\n\t\t\t\tstyle: {\n\t\t\t\t\t...prevOptions.style,\n\t\t\t\t\tbase: {\n\t\t\t\t\t\t...prevOptions.style.base,\n\t\t\t\t\t\t'::placeholder': {\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...showIcon,\n\t\t\t};\n\t\t} );\n\t}, [ isActive ] );\n\n\tconst onActive = useCallback(\n\t\t( isEmpty, isFocus ) => {\n\t\t\tif ( ! isEmpty ) {\n\t\t\t\tsetIsActive( true );\n\t\t\t} else {\n\t\t\t\tsetIsActive( ( prevActive ) => ! prevActive );\n\t\t\t}\n\n\t\t\tif(isFocus) {\n\t\t\t\tsetIsFocus(true);\n\t\t\t} else {\n\t\t\t\tsetIsFocus(false);\n\t\t\t}\n\t\t},\n\t\t[ setIsActive, setIsFocus ]\n\t);\n\treturn { options, isActive, isFocus, onActive, error, setError };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidationBRError extends Error {\n}\nValidationBRError.INVALID_DV = new ValidationBRError('Dígito verificador inválido');\nValidationBRError.EMPTY_VALUE = new ValidationBRError('Valor não preenchido');\nValidationBRError.MAX_LEN_EXCEDEED = new ValidationBRError('Número de caracteres excedido');\nValidationBRError.REPEATED_SEQUENCE = new ValidationBRError('Sequência de números repetidos não permitida');\nexports.default = ValidationBRError;\n//# sourceMappingURL=ValidationBRError.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sumToDV = sumToDV;\nexports.checkRepeatedSequence = checkRepeatedSequence;\nexports.sumElementsByMultipliers = sumElementsByMultipliers;\nexports.fakeNumber = fakeNumber;\nexports.clearValue = clearValue;\nexports.insertAtPosition = insertAtPosition;\nexports.removeFromPosition = removeFromPosition;\nexports.applyMask = applyMask;\nexports.randomLetter = randomLetter;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\n/**\n * Calcula o DV verificador a partir das regras do MOD11:\n * O valor da soma é dividido por 11. O resultado é o resto da divisão. Caso o resto seja\n * menor que 2, ou seja, o valor da divisão seja 10 ou 11, o resultado é 0.\n *\n * @param {Integer} sum Soma\n * @returns {Integer}\n */\nfunction sumToDV(sum) {\n    return sum % 11 < 2 ? 0 : 11 - (sum % 11);\n}\n/**\n * Checa se o número repassado possui todos os digitos iguais\n *\n * @example\n * checkRepeatedSequence(12345678)\n * // -> false\n * checkRepeatedSequence(11111111)\n * // -> true\n *\n */\nfunction checkRepeatedSequence(value) {\n    return [...value].every(digit => digit === value[0]);\n}\n/**\n * Multiplica os elementos de uma string com os elementos de outra, ou de um array\n * e soma o resultado ao final\n *\n * @example\n *   sumElementsByMultipliers('123', '987')      //-> 46\n *   sumElementsByMultipliers('123', [9, 8, 7])  //-> 46\n *\n * @param {String} value\n * @param {String|Array} multiplier\n * @returns {Integer} Somatório\n */\nfunction sumElementsByMultipliers(value, multiplier) {\n    return multiplier.reduce((accu, curr, i) => accu + curr * Number(value[i]), 0);\n}\n/**\n * fakeNumber()\n * Cria um número aleatório com o número de caracteres\n *\n * @example\n * fakeNumber(8, true) // -> 00083159\n * fakeNumber(4) // -> 831\n *\n * @param {Integer} length\n * @param {Boolean} forceLength Adiciona zeros à esquerda para ter os números de caractes exatos\n * @returns {String}\n */\nfunction fakeNumber(length, forceLength = false, isAlpha = false) {\n    let value;\n    if (isAlpha)\n        value = Math.round(Math.random() * 36 ** length).toString(36).toLocaleUpperCase();\n    else\n        value = Math.floor(Math.random() * 10 ** length).toString();\n    if (forceLength)\n        return String(value).padStart(length, '0');\n    return String(value);\n}\n/**\n * Limpa um número informado, retirando caracteres diferentes de números,\n * preenchendo com zeros à esquerda se for menor que o tamanho exato e\n * removendo uma parte do número se for maior que tamanho definido.\n *\n * 1) Retira caracteres não-numéricos\n * 2) Preenche com zeros à esquerda se 'value' for menor que 'length'\n * 3) Remove caracteres à direita se 'value' for maior que 'length'\n *\n * @example\n *  clearValue(12345-6, 6) // -> 123456\n *  clearValue(12345678, 3) // -> 123\n *  clearValue(12345, 10) // -> 0000001234\n *\n * @param {Number|String} value\n * @param {Number} length Tamanho exato. Se for null, só retira os caracteres não-numéricos\n * @returns {String} Número com o tamanho exato\n */\nfunction clearValue(value, length = null, options) {\n    let clearedValue = String(value).replace(/([/.-]+)/gi, '');\n    if (options) {\n        const shouldRejectEmpty = options.rejectEmpty === true && clearedValue.length === 0;\n        if (shouldRejectEmpty) {\n            throw ValidationBRError_1.default.EMPTY_VALUE;\n        }\n        const shouldRejectHigherLength = options.rejectHigherLength === true && length && clearedValue.length > length;\n        if (shouldRejectHigherLength) {\n            throw ValidationBRError_1.default.MAX_LEN_EXCEDEED;\n        }\n        const shouldRejectEqualSequence = options.rejectEqualSequence === true && length;\n        if (shouldRejectEqualSequence) {\n            if (checkRepeatedSequence(clearedValue))\n                throw ValidationBRError_1.default.REPEATED_SEQUENCE;\n        }\n        if (length && options.fillZerosAtLeft)\n            clearedValue = clearedValue.padStart(length, '0');\n        if (length && options.trimAtRight)\n            clearedValue = clearedValue.substring(0, length);\n    }\n    return clearedValue;\n}\n/**\n * insertAtPosition()\n * Insere um conjunto de caracteres em um local específico de uma string\n *\n * @example\n * insertAtPosition('AAABBB', 'C', 3) // -> AAACBBB\n * insertAtPosition('000011122223445555', 99, 7) // -> 00001119922223445555\n *\n * @param {String|Number} value Valor original\n * @param {String|Number} insertValue Valor que será inserido\n * @param {String|Number} position Posição que receberá o novo valor\n * @returns {String}\n *\n */\nfunction insertAtPosition(value, insertValue, position) {\n    return `${value.substring(0, position)}${insertValue}${value.substring(position)}`;\n}\n/**\n * removeFromPosition()\n * Retira um conjunto de caracteres de um local específico de uma string\n *\n * @example\n * removeFromPosition('00001119922223445555', 7,9) // -> 000011122223445555\n * removeFromPosition('AAACBBB', 3,4) // -> AAABBB\n *\n * @param {String|Number} value Valor original\n * @param {String|Number} startPosition\n * @param {String|Number} endPosition\n * @returns {String}\n *\n */\nfunction removeFromPosition(value, startPosition, endPosition) {\n    return [value.slice(0, startPosition), value.slice(endPosition)].join('');\n}\n/**\n * applyMask()\n * Aplica uma máscara a uma string\n *\n * @example\n * applyMask('59650000', '00.000-000') // -> 59.650-000\n * applyMask('99877665544', '(00) 0 0000-0000') // -> (99) 8 7766-5544\n *\n * @param {String|Number} value Valor original\n * @param {String} mask\n * @returns {String}\n *\n */\nfunction applyMask(value, mask) {\n    const maskLen = clearValue(mask).length;\n    let masked = clearValue(value, maskLen, { fillZerosAtLeft: true, trimAtRight: true });\n    const specialChars = ['/', '-', '.', '(', ')', ' '];\n    for (let position = 0; position < mask.length; position += 1) {\n        const current = mask[position];\n        if (specialChars.includes(current))\n            masked = insertAtPosition(masked, current, position);\n    }\n    return masked;\n}\n/**\n * randomLetter()\n * Pega uma letra maiúscula aleatoriamente\n *\n * @example\n * randomLetter() // -> A\n * randomLetter() // -> S\n *\n * @returns {String}\n */\nfunction randomLetter() {\n    const idx = Math.floor(1 + Math.random() * 26);\n    return String.fromCharCode(idx + 64);\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\n/**\n * isCNH()\n * Calcula se uma CNH é válida\n *\n * @doc\n * CNH deve possuir 11 caracteres\n *\n * - Os caracteres 1 a 9 são números sequenciais.\n *\n *\n * - Os caracteres 10 e 11 são dígitos verificadores.\n *\n * 1) Partes do número\n *  ____________________________ ______\n * |  Número                    | D V |\n * |  5  8  3  1  6  7  9  4  5   3 4 |\n * |____________________________|_____|\n *\n * 2) Cálculo do primeiro DV.\n *\n *  - Soma-se o produto das algarismos 1 a 9 pelos números 2, 3, 4, 5, 6, 7, 8, 9, 10.\n *\n *    5   8   3   1   6   7   9   4   5\n *    x   x   x   x   x   x   x   x   x\n *    2   3   4   5   6   7   8   9   10\n * = 10 +24 +12  +5 +36 +49 +72 +36  +50  = 294\n *\n *  - O somatório encontrado é dividido por 11. O DV1 é 11 subtraído do resto da divisão. Se o\n *    resto for 10, o DV1 é 0.\n *\n * 2.1) 294 / 11 tem resto igual a 8. 11-7 = 3\n *      DV1 = 3\n *\n * 3) Cálculo do segundo DV\n *\n *  - Soma-se o produto das algarismos 1 a 9 juntamente com o 10 caractere\n *    que é o DV1, pelos números 3, 4, 5, 6, 7, 8, 9, 10, 11, 2. O DV1 será\n *    multiplicado por 2 e ficará no final.\n *\n *    5   8   3   1   6   7   9   4   5   3\n *    x   x   x   x   x   x   x   x   x   x\n *    3   4   5   6   7   8   9  10  11   2\n * = 10 +24 +12  +5 +36 +49 +72 +36 +50  +6  =  348\n *\n * 3.1) 348 / 11 tem resto igual a 7. 11 - 7 = 4.\n *      DV2 = 4\n *\n *  - O somatório encontrado é dividido por 11. O DV2 é 11 subtraído do resto da divisão. Se o\n *    resto for 10, o DV2 é 0.\n *\n * Fonte: https://www.devmedia.com.br/forum/validacao-de-cnh/372972\n *\n * @param {String} value Título eleitoral\n * @returns {Boolean}\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fake = exports.mask = exports.validate = exports.validateOrFail = exports.dv = void 0;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Calcula o Dígito Verificador de um RENAVAM informado\n *\n * @returns String Número fake de um cnh válido\n */\nconst dv = (value) => {\n    const cnh = (0, utils_1.clearValue)(value, 9, {\n        trimAtRight: true,\n        rejectEmpty: true,\n    });\n    const sum1 = (0, utils_1.sumElementsByMultipliers)(cnh.substring(0, 9), [2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    const dv1 = (0, utils_1.sumToDV)(sum1);\n    const sum2 = (0, utils_1.sumElementsByMultipliers)(cnh.substring(0, 9) + dv1, [3, 4, 5, 6, 7, 8, 9, 10, 11, 2]);\n    const dv2 = (0, utils_1.sumToDV)(sum2);\n    return `${dv1}${dv2}`;\n};\nexports.dv = dv;\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validateOrFail = (value) => {\n    const cnh = (0, utils_1.clearValue)(value, 11, {\n        fillZerosAtLeft: true,\n        rejectEmpty: true,\n        rejectHigherLength: true,\n        rejectEqualSequence: true,\n    });\n    if ((0, exports.dv)(cnh) !== cnh.substring(9, 11)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n};\nexports.validateOrFail = validateOrFail;\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validate = (value) => {\n    try {\n        return (0, exports.validateOrFail)(value);\n    }\n    catch (error) {\n        return false;\n    }\n};\nexports.validate = validate;\n/**\n * Aplica uma máscara a uma string\n *\n * @returns String string com a máscara aplicada\n */\nconst mask = (value) => (0, utils_1.applyMask)(value, '000000000-00');\nexports.mask = mask;\n/**\n * Cria um número fake\n *\n * @returns String Número fake porém válido\n */\nconst fake = (withMask = false) => {\n    const value = (0, utils_1.fakeNumber)(9, true);\n    const cnh = `${value}${(0, exports.dv)(value)}`;\n    if (withMask)\n        return (0, exports.mask)(cnh);\n    return cnh;\n};\nexports.fake = fake;\nexports.default = exports.validate;\n//# sourceMappingURL=cnh.js.map","\"use strict\";\n/**\n * isCNPJ()\n * Calcula se um CNPJ é válido\n *\n * A partir da Nota Técnica conjunta COCAD/SUARA/RFB nº 49 de 14 de maio de 2024, CNPJ passa\n * a poder ser criado com letras e números, ao invés de apenas números. Esta alteração entra\n * em vigor em 2026.\n *\n *\n * @doc\n * - CNPJ deve possuir 14 dígitos no formato AA.AAA.AAA/AAAA-NN, onde A representa letras\n * ou números e N representa números (Nota Técnica conjunta COCAD/SUARA/RFB nº 49 de 14 de maio de 2024)\n *\n * - Os caracteres 1 a 8 são a identificação da empresa definida pela Receita Federal. Podem ser letras ou números\n *\n * - Os caracteres 9 a 12 são a identificação das filiais da empresa. Podendo ser letras ou números\n *\n * - Os caracteres 13 e 14 são os dígitos verificadores\n *\n * 1) Partes do número\n *  _______________________________ _______________ _______\n * | Número                        |    Filiais    |  DV   |\n * | 1   1 . 2   2   2 . 3   3   3 / 0   0   0   1 - X   Y |\n * |_______________________________|_______________|_______|\n *\n *\n * 2.1) Conversão dos números para tabela ASCII\n * Converte os caracteres do CNPJ em valores numéricos, mesmo que alguns deles\n * sejam numéricos. A conversão será baseada na tabela ASCII\n *\n *  Tabela ASCII\n *  0 = 48    1 = 49     2 = 50    3 = 51    4 = 52\n *  5 = 53    6 = 54     7 = 55    8 = 56    9 = 57\n *  A = 65    B = 66     C = 67    D = 68    E = 69\n *  F = 70    G = 71     H = 72    I = 73    J = 74\n *  K = 75    L = 76     M = 77    N = 78    O = 79\n *  P = 80    Q = 81     R = 82    S = 83    T = 84\n *  U = 85    V = 86     W = 87    X = 88    Y = 89\n *  Z = 90\n *\n * Ao converter cada dígito do CNPJ para o seu equivalente na tabela ASCII, subtraia de 48\n * para obter o número que será multiplicado.\n * Como o \"0\" é 48 e deve-se subtrair de 48, não há mudanças nos números.\n *\n *\n *\n * 2) Cálculo do primeiro DV.\n *\n *  - Soma-se o produto das algarismos 1 a 12 pelos números 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2\n *\n *    1   1   2   2   2   3   3   3   0   0   0   1\n *    x   x   x   x   x   x   x   x   x   x   x   x\n *    5   4   3   2   9   8   7   6   5   4   3   2\n * =  5  +4  +6  +4 +18 +24 +21 +18  +0  +0  +0  +2 = 102\n *\n *  - O somatório encontrado é dividido por 11 e o resultado é subtraído de 11\n *    102 / 11 tem resto 8. 11 - 3 = 8. DV1 é 8.\n *    Obs.: Caso o cálculo de DV1 retorne 10, o resultado será 0.\n *\n * 3) Cálculo do segundo DV.\n *\n *  - Soma-se o produto das algarismos 1 a 13 (incluindo o DV1 calculado) pelos\n *    números 6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2.\n *\n *    1   1   2   2   2   3   3   3   0   0   0   1   8\n *    x   x   x   x   x   x   x   x   x   x   x   x   x\n *    6   5   4   3   2   9   8   7   6   5   4   3   2\n * =  6  +5  +8  +6  +4 +27 +24 +21  +0  +0  +0  +3 +16 = 120\n *\n *  - O somatório encontrado é dividido por 11 e o resultado é subtraído de 11\n *    120 / 11 tem resto 10. 11 - 10 = 1. DV2 é 1.\n *    Obs.: Caso o cálculo de DV2 retorne 10, o resultado será 0.\n *\n * Fonte: http://www.macoratti.net/alg_cnpj.htm\n *\n * @param {String} value Título eleitoral\n * @returns {Boolean}\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dv = dv;\nexports.mask = mask;\nexports.fake = fake;\nexports.validateOrFail = validateOrFail;\nexports.validate = validate;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\nfunction dv(value) {\n    const cnpj = (0, utils_1.clearValue)(value, 12, {\n        trimAtRight: true,\n        rejectEmpty: true,\n    });\n    const dv1Factors = [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n    const dv1 = sumToDvWithAlpha(cnpj.substring(0, 12), dv1Factors);\n    const dv2Factors = [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n    const dv2 = sumToDvWithAlpha(cnpj.substring(0, 12) + dv1, dv2Factors);\n    return `${dv1}${dv2}`;\n}\n/**\n * Aplica uma máscara ao número informado\n *\n * @param {String} value Número de Processo\n * @returns {String} Valor com a máscara\n */\nfunction mask(value) {\n    return (0, utils_1.applyMask)(value, '00.000.000/0000-00');\n}\nfunction fake(input = false) {\n    const options = typeof input === 'boolean'\n        ? { withMask: input, alphanumeric: true }\n        : { withMask: false, alphanumeric: true, ...input };\n    const num = (0, utils_1.fakeNumber)(12, true, options.alphanumeric);\n    const cnpj = `${num}${dv(num)}`;\n    if (options.withMask)\n        return mask(cnpj);\n    return cnpj;\n}\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nfunction validateOrFail(value) {\n    const cnpj = (0, utils_1.clearValue)(value, 14, {\n        fillZerosAtLeft: false,\n        rejectEmpty: true,\n        rejectHigherLength: true,\n        rejectEqualSequence: true,\n    });\n    if (dv(cnpj) !== cnpj.substring(12, 14)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n}\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nfunction validate(value) {\n    try {\n        return validateOrFail(value);\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.default = validate;\n/**\n *\n * Converte o número para\n *\n *\n */\nfunction asciiTableConverter(character) {\n    if (/^\\d$/.test(character))\n        return +character;\n    const ascii = character.toLocaleUpperCase().charCodeAt(0) - 48;\n    return ascii;\n}\n/**\n *\n *\n *\n */\nfunction sumToDvWithAlpha(value, multiplier) {\n    const sum = [...value]\n        .map(character => asciiTableConverter(character))\n        .reduce((sum, asciiChar, index) => sum + asciiChar * multiplier[index], 0);\n    return (0, utils_1.sumToDV)(sum);\n}\n//# sourceMappingURL=cnpj.js.map","\"use strict\";\n/**\n * isCPF()\n * Calcula se um CPF é válido\n *\n * @doc\n * CPF deve possuir 11 dígitos.\n *\n * - Os caracteres 1 a 8 são números sequenciais definidos pela Receita Federal\n *\n * - O caractere 9 refere-se à região fiscal emissora do documento\n *    1 – DF, GO, MS, MT e TO\n *    2 – AC, AM, AP, PA, RO e RR\n *    3 – CE, MA e PI\n *    4 – AL, PB, PE, RN\n *    5 – BA e SE\n *    6 – MG\n *    7 – ES e RJ\n *    8 – SP\n *    9 – PR e SC\n *    0 – RS\n *\n * - Os caracteres 10 e 11 são dígitos verificadores.\n *\n * 1) Partes do número\n * ------------------------------------------------\n * | Número                       | R |  DV  |\n *  2   8   0 . 0   1   2 . 3   8   9 - 3   8\n *\n * 2) Cálculo do primeiro DV.\n *\n *  - Soma-se o produto das algarismos 1 a 9 pelos números 10, 9, 8, 7, 6, 5, 4, 3, 2\n *\n *    2   8   0   0   1   2   3   8   9\n *    x   x   x   x   x   x   x   x   x\n *   10   9   8   7   6   5   4   3   2\n * = 20 +72  +0  +0  +6 +10 +12 +24 +18 = 162\n *\n *  - O somatório encontrado é dividido por 11 e o resultado é subtraído de 11\n *    162 / 11 tem resto 8. 11 - 8 = 3. DV1 é 3.\n *    Obs.: Caso o cálculo de DV1 retorne 10, o resultado será 0.\n *\n * 3) Cálculo do segundo DV.\n *\n *  - Soma-se o produto das algarismos 1 a 10 pelos números 11, 10, 9, 8, 7, 6, 5, 4, 3, 2\n *\n *    2   8   0   0   1   2   3   8   9   3\n *    x   x   x   x   x   x   x   x   x   x\n *   11  10   9   8   7   6   5   4   3   2\n * = 22 +80  +0  +0  +7 +12 +15 +32 +27 = 201\n *\n *  - O somatório encontrado é dividido por 11 e o resultado é subtraído de 11\n *    201 / 11 tem resto 3. 11 - 3 = 8. DV2 é 8.\n *    Obs.: Caso o cálculo de DV2 retorne 10, o resultado será 0.\n *\n * Fonte: http://clubes.obmep.org.br/blog/a-matematica-nos-documentos-cpf/\n *\n * @param {String} value Título eleitoral\n * @returns {Boolean}\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.validateOrFail = exports.fake = exports.mask = exports.dv = void 0;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\n/**\n * dv()\n * Calcula o dígito verificador\n *\n * @param {Number|String} value\n * @returns {String}\n */\nconst dv = (value) => {\n    const cpf = (0, utils_1.clearValue)(value, 9, {\n        trimAtRight: true,\n        rejectEmpty: true,\n    });\n    const sum1 = (0, utils_1.sumElementsByMultipliers)(cpf, [10, 9, 8, 7, 6, 5, 4, 3, 2]);\n    const dv1 = (0, utils_1.sumToDV)(sum1);\n    const sum2 = (0, utils_1.sumElementsByMultipliers)(cpf + dv1, [11, 10, 9, 8, 7, 6, 5, 4, 3, 2]);\n    const dv2 = (0, utils_1.sumToDV)(sum2);\n    return `${dv1}${dv2}`;\n};\nexports.dv = dv;\n/**\n * Aplica uma máscara ao número informado\n *\n * @param {String} value Número de Processo\n * @returns {String} Valor com a máscara\n */\nconst mask = (value) => (0, utils_1.applyMask)(value, '000.000.000-00');\nexports.mask = mask;\n/**\n * fake()\n * Gera um número válido\n *\n * @returns {String}\n */\nconst fake = (withMask = false) => {\n    const num = (0, utils_1.fakeNumber)(9, true);\n    const cpf = `${num}${(0, exports.dv)(num)}`;\n    if (withMask)\n        return (0, exports.mask)(cpf);\n    return cpf;\n};\nexports.fake = fake;\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validateOrFail = (value) => {\n    const cpf = (0, utils_1.clearValue)(value, 11, {\n        fillZerosAtLeft: true,\n        rejectEmpty: true,\n        rejectHigherLength: true,\n        rejectEqualSequence: true,\n    });\n    if ((0, exports.dv)(cpf) !== cpf.substring(9, 11)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n};\nexports.validateOrFail = validateOrFail;\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validate = (value) => {\n    try {\n        return (0, exports.validateOrFail)(value);\n    }\n    catch (error) {\n        return false;\n    }\n};\nexports.validate = validate;\nexports.default = exports.validate;\n//# sourceMappingURL=cpf.js.map","\"use strict\";\n/**\n * judicialProcess\n * Valida, mascara e cria números de processos judiciais\n *\n * @link\n * https://juslaboris.tst.jus.br/bitstream/handle/20.500.12178/30318/2008_res0065_cnj_rep01.pdf?sequence=2\n * http://ghiorzi.org/DVnew.htm#f\n *\n * @doc\n * Os  números de processos judiciais são usados a partir de 2010 para unificar a\n * numeração de processos no Brasil e são usados em todos os tribunais.\n *\n * O número do processo, sem os caracteres especiais, devem possuir até 20 números\n * e deve seguir o padrão abaixo:\n *\n * 1) Partes do número\n *  0002080-25.2012.5.15.0049\n *  NNNNNNN-DD.AAAA.J.TR.OOOO\n * |______|__|____|_|__|____|\n *    |    |   |  | |   |----> Unidade de origem do processo com 4 caracteres\n *    |    |   |  | |--------> TR=Tribunal do segmento do poder judiciário com 2 caracteres\n *    |    |   |  |----------> J=Órgão do poder Judiciário com 1 caractere\n *    |    |   |-------------> Ano do ajuizamento do processo com 4 caracteres\n *    |    |-----------------> Dígito verificador com 2 caracteres\n *    |----------------------> Número sequencial do Processo, por unidade de\n *                             origem, reiniciado anualmente com 7 caracteres\n *\n * Órgãos do Poder Judiciário\n * 1 - Supremo Tribunal Federal\n * 2 - Conselho Nacional de Justiça\n * 3 - Superior Tribunal de Justiça\n * 4 - Justiça Federal\n * 5 - Justiça do Trabalho\n * 6 - Justiça Eleitoral\n * 7 - Justiça Militar da União\n * 8 - Justiça dos Estados e do Distrito Federal e Territórios\n * 9 - Justiça Militar Estadual\n *\n *\n * 2) Dígito Verificador\n *\n * O algoritmo usado para o cálculo do DV chama-se Módulo 97 de Base 10 (ISO 7064).\n *\n * Nota: O número do processo possui 20 caracteres e ultrapassa o tamanho máximo\n * do inteiro em javascript, impedindo que façamos o cálculo diretamente, desta\n * forma, será nacessária uma fatoração para que o resultado seja o correto.\n *\n * 2.1) Cálculo do DV\n * - Caso o DV seja conhecido, ele precisa ser removido do número e colocado\n * como \"00\" ao final. Caso não esteja incluso no número, adicione '00' ao final.\n *\n * Ex.: O processo \"00020802520125150049\", cujo dv é \"25\", será calculado como\n * \"000208020125150049\" e receberá \"00\" ao final. O número usado para o cálculo\n * do DV será \"00020802012515004900\"\n *\n * 2.2) Etapas de Cálculo\n *\n * 00020802012515004900\n *                   ↓↓\n *                   DV ao final como \"00\"\n *\n * - Aplicamos o MOD 97 aos caracteres de 0 a 7 para calcular a primeira parte\n * part1 = 0002080 % 97 = 43\n *\n * - Concatenamos part1 ao ano, órgão do poder judiciário e tribunal e aplicamos o MOD 97\n * para obtermos o valor da part2\n * part2 = ( part1 +''+ 2012 +''+ 5 +''+ 15 ) % 97 = 26\n *\n * - Concatemos part2 ao código do órgão de origem e ao \"00\" do final e aplicamos\n * o MOD 97 ao resultado\n * part3 = ( part2 + '0049' + '00') % 97 = 73\n *\n * - Subtraímos o resultado de 98\n * dv = 98 - 73 = 25\n *\n * O Dígito verificador é 25 e deve ser aplicado após o 7º caractere do número do processo\n *\n * Fonte: https://juslaboris.tst.jus.br/bitstream/handle/20.500.12178/30318/2008_res0065_cnj_rep01.pdf?sequence=2\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.validateOrFail = exports.fake = exports.mask = exports.dv = void 0;\nexports._getSubCourt = _getSubCourt;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\n/**\n *\n *\n */\nconst dv = (value) => {\n    const judicialProcess = (0, utils_1.clearValue)(value, 18, { trimAtRight: true, rejectEmpty: true });\n    const num = judicialProcess.substring(0, 7);\n    const yearAndCourt = judicialProcess.substring(7, 14);\n    const origin = judicialProcess.substring(14, 18);\n    return String(98 - (Number(`${Number(`${Number(num) % 97}${yearAndCourt}`) % 97}${origin}00`) % 97)).padStart(2, '0');\n};\nexports.dv = dv;\n/**\n * Aplica uma máscara ao número informado\n *\n * @param {String} value Número de Processo\n * @returns {String} Valor com a máscara\n */\nconst mask = (value) => (0, utils_1.applyMask)(value, '0000000-00.0000.0.00.0000');\nexports.mask = mask;\n/**\n *\n *\n */\nconst fake = (withMask = false) => {\n    const num = (0, utils_1.fakeNumber)(7, true);\n    const year = new Date().getFullYear() - +(0, utils_1.fakeNumber)(1);\n    let courte1 = (0, utils_1.fakeNumber)(1, true); // Não pode ser '0'\n    courte1 = courte1 === '0' ? '1' : courte1;\n    const courte2 = _getSubCourt();\n    const courte = `${courte1}${courte2}`;\n    const origin = (0, utils_1.fakeNumber)(4, true);\n    const judicialProcess = `${num}${year}${courte}${origin}`;\n    const digits = (0, exports.dv)(judicialProcess);\n    const finalNumber = (0, utils_1.insertAtPosition)(judicialProcess, digits, 7);\n    if (withMask)\n        return (0, exports.mask)(finalNumber);\n    return finalNumber;\n};\nexports.fake = fake;\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String} value Número a ser validado\n * @returns {Boolean}\n */\nconst validateOrFail = (value) => {\n    const judicialProcess = (0, utils_1.clearValue)(value, 20, {\n        fillZerosAtLeft: true,\n        rejectEmpty: true,\n        rejectHigherLength: true,\n    });\n    const processWithoutDV = (0, utils_1.removeFromPosition)(judicialProcess, 7, 9);\n    if (processWithoutDV.substring(11, 12) === '0') {\n        throw new Error('Código do Órgão Judiciário não pode ser \"0\"');\n    }\n    if ((0, exports.dv)(processWithoutDV) !== judicialProcess.substring(7, 9)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n};\nexports.validateOrFail = validateOrFail;\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String} value Número a ser validado\n * @returns {Boolean}\n */\nconst validate = (value) => {\n    try {\n        return (0, exports.validateOrFail)(value);\n    }\n    catch (error) {\n        return false;\n    }\n};\nexports.validate = validate;\n// ////////////////////////////////////////////\n//\n// Funções auxiliares\n//\n// ////////////////////////////////////////////\n/**\n * Gera um número fake da sub corte de acordo com as regras:\n * - Precisa ser uma string numérica de 2 dígitos.\n * - Não pode ser '0'. CAso seja zero, mude para '01'.\n *\n * A função aceita um parâmetro para viabilizar os testes. Caso\n * não seja definido, será gerado aleatoriamente.\n *\n * @param\n *\n */\nfunction _getSubCourt(courte = undefined) {\n    courte = courte !== null && courte !== void 0 ? courte : (0, utils_1.fakeNumber)(2, true).toString();\n    return +courte === 0 ? '01' : courte;\n}\nexports.default = exports.validate;\n//# sourceMappingURL=judicialProcess.js.map","\"use strict\";\n/**\n * isFederalProtocol()\n * Calcula se é um número válido de protocolo do Governo Federal Brasileiro\n *\n * @doc\n * O Número Unificado de Protocolo de processos do Governo Federal, também conhecido\n * como NUP17, deve ter 17 caracteres, incluindo o dígito verificador de 2 caracteres.\n *\n * 1) Partes do número\n *\n * - Os caracteres 1 a 5 são um código do órgão que gerou o protocolo.\n *\n * - Os caracteres 6 a 11 são o número sequencial do protocolo, sendo que\n * cada órgão emissor tem sua própria sequência e esta é reiniciada a cada ano.\n *\n * - Os caracteres 12 a 15 são referentes ao ano de protocolo\n *\n * - Os caracteres 16 a 17 são referentes ao Dígito Verificador\n *\n * 1.2) Exemplo\n * ---------------------------------------------------------------\n * |  Código do órgão |   Número Sequencial   |    Ano     | D  V\n *  2   3   0   3   7 . 0   0   1   4   6   2 / 2  0  2  1 - 6  5\n *\n * 2) Cálculo do primeiro DV.\n *\n *  - Soma-se o produto das algarismos 1 a 15 pelos números\n *    16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2\n *\n *    2   3   0   3   7   0   0   1   4   6   2   2   0   2   1\n *    x   x   x   x   x   x   x   x   x   x   x   x   x   x   x\n *   16  15  14  13  12  11  10   9   8   7   6   5   4   3   2\n * = 32 +45  +0 +39 +84  +0  +0  +9 +32 +42 +12 +10  +0  +6  +2 = 313\n *\n *  - O somatório encontrado é dividido por 11. O resto da divisão é subtraído de 11.\n *    313 / 11 tem resto 5. 11 - 5 = 6. DV1 é 6.\n *    Obs.: Caso o cálculo de DV1 retorne 10, o resultado será 0. Caso retorne 11, o DV\n *    será 1. Ou seja, se for maior ou igual a 10, desconsidere a casa das dezenas\n *\n * 3) Cálculo do segundo DV.\n *\n * - Acrescenta o valor do DV1 ao número e faz o somatório dos produtos pelos números\n *   17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2\n *\n *    2   3   0   3   7   0   0   1   4   6   2   2   0   2   1   6\n *    x   x   x   x   x   x   x   x   x   x   x   x   x   x   x   x\n *   17  16  15  14  13  12  11  10   9   8   7   6   5   4   3   2\n * = 34 +48  +0 +42 +91  +0  +0 +10 +36 +48 +14 +12  +0  +8  +3 +12 = 358\n *\n *  - O somatório encontrado é dividido por 11. O resto da divisão é subtraído de 11.\n *    358 / 11 tem resto 6. 11 - 6 = 1. DV1 é 5.\n *    Obs.: Caso o cálculo de DV1 retorne 10, o resultado será 0. Caso retorne 11, o DV\n *    será 1. Ou seja, se for maior ou igual a 10, desconsidere a casa das dezenas.\n *\n * = DV = 65\n *\n * Fonte: https://www.gov.br/compras/pt-br/acesso-a-informacao/legislacao/portarias/portaria-interministerial-no-11-de-25-de-novembro-de-2019\n *\n * @param {String} value Título eleitoral\n * @returns {Boolean}\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.validateOrFail = exports.fake = exports.mask = exports.dv = void 0;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\n/**\n * dv()\n * Calcula o dígito verificador\n *\n * @param {String} value\n * @returns {String}\n */\nconst dv = (value) => {\n    const nup = (0, utils_1.clearValue)(value, 15, { rejectEmpty: true, trimAtRight: true });\n    const nupReverse = nup.split('').reverse().join('');\n    const sum1 = (0, utils_1.sumElementsByMultipliers)(nupReverse, [...Array(15)].map((_, i) => i + 2));\n    const dv1 = _specificSumToDV(sum1);\n    const sum2 = (0, utils_1.sumElementsByMultipliers)(dv1 + nupReverse, [...Array(16)].map((_, i) => i + 2));\n    const dv2 = _specificSumToDV(sum2);\n    return `${dv1}${dv2}`;\n};\nexports.dv = dv;\n/**\n * Aplica uma máscara ao número informado\n *\n * @param {String} value Número de Processo\n * @returns {String} Valor com a máscara\n */\nconst mask = (value) => (0, utils_1.applyMask)(value, '00000.000000/0000-00');\nexports.mask = mask;\n/**\n * fake()\n * Gera um número válido\n *\n * @param {Boolean} withMask Define se o número deve ser gerado com ou sem máscara\n * @returns {String}\n */\nconst fake = (withMask = false) => {\n    const num = (0, utils_1.fakeNumber)(15, true);\n    const nup = `${num}${(0, exports.dv)(String(num))}`;\n    if (withMask)\n        return (0, exports.mask)(nup);\n    return nup;\n};\nexports.fake = fake;\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String} value Número a ser validado\n * @returns {Boolean}\n */\nconst validateOrFail = (value) => {\n    const nup = (0, utils_1.clearValue)(value, 17, {\n        rejectEmpty: true,\n        rejectHigherLength: true,\n    });\n    if ((0, exports.dv)(nup) !== nup.substring(15, 17)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n};\nexports.validateOrFail = validateOrFail;\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String} value Número a ser validado\n * @returns {Boolean}\n */\nconst validate = (value) => {\n    try {\n        return (0, exports.validateOrFail)(value);\n    }\n    catch (error) {\n        return false;\n    }\n};\nexports.validate = validate;\nexports.default = exports.validate;\nfunction _specificSumToDV(sum) {\n    const rest = 11 - (sum % 11);\n    const exceptions = [\n        { rest: 11, dv: 1 },\n        { rest: 10, dv: 0 },\n    ];\n    const inExceptions = exceptions.find((item) => item.rest === rest);\n    return !inExceptions ? rest : inExceptions.dv;\n}\n//# sourceMappingURL=nup17.js.map","\"use strict\";\n/**\n * isPIS()\n * Calcula se um código de PIS/PASEP/NIS/NIT no formato 268.27649.96-0 é válido. Não\n * valida o formato, portanto, 26827649960 é equivalente a 268.27649.96-0 para efeitos\n * desta validação.\n *\n * @doc\n * - O número de PIS deve possuir 11 caracteres\n *\n * - Os caracteres de 1 a 10 são a numeração documento\n *\n * - O caractere 11 é o dígito verificador.\n *\n * 1) Partes do número\n *  _______________________________________________\n * |  Número                                 | D V |\n * |  2   6   8 . 2   7   6   4   9 . 9   6  -  0  |\n * |_________________________________________|_____|\n *\n * 2) Cálculo do DV.\n *\n *  - Soma-se o produto das algarismos 3 a 10 pelos números 3, 2, 9, 8, 7, 6, 5, 4, 3, 2\n *\n *    2   6   8   2   7   6   4   9   9   6\n *    x   x   x   x   x   x   x   x   x   x\n *    3   2   9   8   7   6   5   4   3   2\n * =  6 +12 +72 +16 +49 +12 +20 +36 +27 +12  =  234\n *\n *  - O somatório encontrado é dividido por 11 e o resultado é subtraído de 11\n *    234 / 11 tem resto 3. 11 - 3 = 8. DV1 é 8.\n *    Obs.: Caso o cálculo de DV1 retorne 0, o resultado será 5.\n *          Caso retorne 1, o resto será 0\n *\n *\n *\n *\n * Fonte: http://www.macoratti.net/alg_pis.htm\n *\n * @param {String} value Objeto postal no formato 268.27649.96-0\n * @returns {Boolean}\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.validateOrFail = exports.fake = exports.mask = exports.dv = void 0;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\n/**\n * dv()\n * Calcula o dígito verificador\n *\n * @param {Number|String} value\n * @returns {String}\n */\nconst dv = (value) => {\n    const pis = (0, utils_1.clearValue)(value, 10, {\n        trimAtRight: true,\n        rejectEmpty: true,\n    });\n    const sum = (0, utils_1.sumElementsByMultipliers)(pis, [3, 2, 9, 8, 7, 6, 5, 4, 3, 2]);\n    return String((0, utils_1.sumToDV)(sum));\n};\nexports.dv = dv;\n/**\n * Aplica uma máscara ao número informado\n *\n * @param {String} value Número de Processo\n * @returns {String} Valor com a máscara\n */\nconst mask = (value) => (0, utils_1.applyMask)(value, '000.00000.00-0');\nexports.mask = mask;\n/**\n * fake()\n * Gera um número válido\n *\n * @returns {String}\n */\nconst fake = (withMask = false) => {\n    const num = (0, utils_1.fakeNumber)(10, true);\n    const pis = `${num}${(0, exports.dv)(num)}`;\n    if (withMask)\n        return (0, exports.mask)(pis);\n    return pis;\n};\nexports.fake = fake;\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validateOrFail = (value) => {\n    const pis = (0, utils_1.clearValue)(value, 11, {\n        fillZerosAtLeft: true,\n        rejectEmpty: true,\n        rejectHigherLength: true,\n        rejectEqualSequence: true,\n    });\n    if ((0, exports.dv)(pis) !== pis.substring(10, 11)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n};\nexports.validateOrFail = validateOrFail;\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validate = (value) => {\n    try {\n        return (0, exports.validateOrFail)(value);\n    }\n    catch (error) {\n        return false;\n    }\n};\nexports.validate = validate;\nexports.default = exports.validate;\n//# sourceMappingURL=pisPasep.js.map","\"use strict\";\n/**\n * isPostalCode()\n * Calcula se um código de rastreamento postal no formato JT194690698BR é válido.\n *\n * @doc\n * - O número de registro postal deve possuir 13 caracters no formato JT194690698BR.\n *\n * - Os caracteres 1 e 2 informam o tipo do objeto. Ex.: SX é Sedex, RC é carta registrada etc.\n *\n * - Os caracteres de 3 a 10 são a numeração sequencial do tipo do objeto.\n *\n * - O caractere 11 é o dígito verificador.\n *\n * - Os caracteres 12 e 13 representa o código do País de onde a postagem partiu.\n *\n * 1) Partes do número\n *  ______ ___________________________ ______ _______\n * | Tipo | Número                    |  DV  |  País |\n * | J T    1  9  4  6  9  0  6  9       8      B R  |\n * |______|___________________________|______|_______|\n *\n * 2) Cálculo do DV.\n *\n *  - Soma-se o produto das algarismos 3 a 10 pelos números 8, 6, 4, 2, 3, 5, 9, 7\n *\n *    1   9   4   6   9   0   6   9\n *    x   x   x   x   x   x   x   x\n *    8   6   4   2   3   5   9   7\n * =  8 +54 +16 +12 +18  +0 +54 +63 = 234\n *\n *  - O somatório encontrado é dividido por 11 e o resultado é subtraído de 11\n *    234 / 11 tem resto 3. 11 - 3 = 8. DV1 é 8.\n *    Obs.: Caso o cálculo de DV1 retorne 0, o resultado será 5.\n *          Caso retorne 1, o resto será 0\n *\n *\n *\n *\n * Fonte:\n *\n * @param {String} value Objeto postal no formato JT194690698BR\n * @returns {Boolean}\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.validateOrFail = exports.fake = exports.mask = exports.dv = void 0;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\n/**\n * dv()\n * Calcula o dígito verificador\n *\n * @param {Number|String} value\n * @returns {String}\n */\nconst dv = (value) => {\n    if (!value)\n        throw ValidationBRError_1.default.EMPTY_VALUE;\n    const postalCode = String(value)\n        .replace(/[^0-9]+/gi, '')\n        .padStart(8, '0')\n        .substring(0, 8);\n    const sum = (0, utils_1.sumElementsByMultipliers)(postalCode, [8, 6, 4, 2, 3, 5, 9, 7]);\n    const rest = sum % 11;\n    // const specificities = { 0: { dv: 5 }, 1: { dv: 0 } }\n    const specificities = [\n        { rest: 0, dv: 5 },\n        { rest: 1, dv: 0 },\n    ];\n    const specifity = specificities.find((item) => item.rest === rest);\n    const DV = specifity ? specifity.dv : 11 - rest;\n    return String(DV);\n};\nexports.dv = dv;\n/**\n * Aplica uma máscara ao número informado\n *\n * @param {String} value Número de Processo\n * @returns {String} Valor com a máscara\n */\nconst mask = (value) => String(value).toLocaleUpperCase();\nexports.mask = mask;\n/**\n * fake()\n * Gera um número válido\n *\n * @returns {String}\n */\nconst fake = (withMask = false) => {\n    const num = (0, utils_1.fakeNumber)(8, true);\n    const postalCode = `${(0, utils_1.randomLetter)()}${(0, utils_1.randomLetter)()}${num}${(0, exports.dv)(num)}BR`;\n    if (withMask)\n        return (0, exports.mask)(postalCode);\n    return postalCode;\n};\nexports.fake = fake;\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String} value Número a ser validado\n * @returns {Boolean}\n */\nconst validateOrFail = (value) => {\n    if (!/^[a-z]{2}([\\d]{9})[a-z]{2}$/gi.test(String(value))) {\n        throw new Error('O número não está no formato \"XX000000000XX\"');\n    }\n    const postalCode = (0, utils_1.clearValue)(value.substring(2, 11), 9);\n    if ((0, exports.dv)(value.substring(2, 11)) !== postalCode.substring(8, 9)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n};\nexports.validateOrFail = validateOrFail;\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String} value Número a ser validado\n * @returns {Boolean}\n */\nconst validate = (value) => {\n    try {\n        return (0, exports.validateOrFail)(value);\n    }\n    catch (error) {\n        return false;\n    }\n};\nexports.validate = validate;\nexports.default = exports.validate;\n//# sourceMappingURL=postalCode.js.map","\"use strict\";\n/**\n * RENAVAM\n * Funções auxiliares para cálculo de máscaras, validação, dígito verificador e criaçãode\n * números fake.\n *\n * @doc\n * - O número de RENAVAM deve possuir 11 caracteres\n *\n * - Os caracteres de 1 a 10 são a numeração documento\n *\n * - O caractere 11 é o dígito verificador.\n *\n * 1) Partes do número\n *  _______________________________________________\n * |  Número                                 | D V |\n * |  2   6   8   2   7   6   4   9   9   6  -  0  |\n * |_________________________________________|_____|\n *\n * 2) Cálculo do DV.\n *\n *  - Soma-se o produto das algarismos 3 a 10 pelos números 3, 2, 9, 8, 7, 6, 5, 4, 3, 2\n *\n *    2   6   8   2   7   6   4   9   9   6\n *    x   x   x   x   x   x   x   x   x   x\n *    3   2   9   8   7   6   5   4   3   2\n * =  6 +12 +72 +16 +49 +12 +20 +36 +27 +12  =  234\n *\n *  - O somatório encontrado é multiplicado por 10 e ao resultado\n *    é aplicado o cálculo do MOD 11.\n *\n *    ( 234 * 10 ) / 11 tem resto 8. DV = 8. Caso o resto seja maior ou igual a\n *    10, DV será 0.\n *\n *\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.validateOrFail = exports.fake = exports.mask = exports.dv = void 0;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\n/**\n * dv()\n * Calcula o dígito verificador\n *\n * @param {Number|String} value\n * @returns {String}\n */\nconst dv = (value) => {\n    const renavam = (0, utils_1.clearValue)(value, 10, {\n        fillZerosAtLeft: true,\n        trimAtRight: true,\n        rejectEmpty: true,\n    });\n    const sum1 = (0, utils_1.sumElementsByMultipliers)(renavam, [3, 2, 9, 8, 7, 6, 5, 4, 3, 2]) * 10;\n    const dv1 = sum1 % 11 >= 10 ? 0 : sum1 % 11;\n    return `${dv1}`;\n};\nexports.dv = dv;\n/**\n * Aplica uma máscara ao número informado\n *\n * @param {String} value Número de Processo\n * @returns {String} Valor com a máscara\n */\nconst mask = (value) => (0, utils_1.applyMask)(value, '0000000000-0');\nexports.mask = mask;\n/**\n * fake()\n * Gera um número válido\n *\n * @returns {String}\n */\nconst fake = (withMask = false) => {\n    const value = (0, utils_1.fakeNumber)(10, true);\n    const renavam = `${value}${(0, exports.dv)(value)}`;\n    if (withMask)\n        return (0, exports.mask)(renavam);\n    return renavam;\n};\nexports.fake = fake;\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validateOrFail = (value) => {\n    const renavam = (0, utils_1.clearValue)(value, 11, {\n        fillZerosAtLeft: true,\n        rejectEmpty: true,\n        rejectHigherLength: true,\n        rejectEqualSequence: true,\n    });\n    if ((0, exports.dv)(renavam) !== renavam.substring(10, 11)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n};\nexports.validateOrFail = validateOrFail;\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validate = (value) => {\n    try {\n        return (0, exports.validateOrFail)(value);\n    }\n    catch (error) {\n        return false;\n    }\n};\nexports.validate = validate;\nexports.default = exports.validate;\n//# sourceMappingURL=renavam.js.map","\"use strict\";\n/**\n * isTitulo()\n * Calcula se um título eleitoral é válido\n *\n * @doc\n * Título de eleitor deve possuir 12 dígitos.\n *\n * - Os caracteres 1 a 8 são números sequenciais.\n *\n * - Os caracteres 9 e 10 representam os estados da federação onde o título\n *   foi emitido (01 = SP, 02 = MG, 03 = RJ, 04 = RS, 05 = BA, 06 = PR, 07 = CE, 08 = PE,\n *   09 = SC, 10 = GO,  11 = MA12 = PB, 13 = PA, 14 = ES, 15 = PI, 16 = RN, 17 = AL,\n *   18 = MT, 19 = MS, 20 = DF, 21 = SE, 22 = AM, 23 = RO, 24 = AC, 25 = AP, 26 = RR,\n *   27 = TO, 28 = Exterior(ZZ).\n *\n * - Os caracteres 11 e 12 são dígitos verificadores.\n *\n * 1) Partes do número\n * ------------------------------------------------\n * |       Número Sequencial      |  UF   |   DV  |\n *  1   0   2   3   8   5   0   1   0   6   7   1\n *\n * 2) Cálculo do primeiro DV.\n *\n *  - Soma-se o produto das algarismos 1 a 8 pelos números 2, 3, 4, 5, 6, 7, 8 e 9.\n *\n *   1   0   2   3   8   5   0   1\n *   x   x   x   x   x   x   x   x\n *   2   3   4   5   6   7   8   9\n * = 2 + 0 + 8 +15 +48 +35 + 0 + 9  = 117\n *\n *  - O somatório encontrado é dividido por 11. O DV1 é o resto da divisão. Se o\n *    resto for 10, o DV1 é 0.\n *\n * 2.1) 117 / 11 tem resto igual a 7.\n *\n * 3) Cálculo do segundo DV\n *\n * - Soma-se o produto dos algarismos 9 a 11 (relativos aos 2 dígitos da UF e o novo\n *   DV1 que acabou de ser calculado) e os multiplicam pelos números 7, 8 e 9. Se o\n *   resto for 10, DV2 será 0.\n *   0   6   7\n *   x   x   x\n *   7   8   9\n * = 0 +48 +63 = 111\n *\n * 3.1) 111 / 11 tem resto igual a 1.\n *\n * Fonte: http://clubes.obmep.org.br/blog/a-matematica-nos-documentos-titulo-de-eleitor/\n *\n * @param {String} value Título eleitoral\n * @returns {Boolean}\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = exports.validateOrFail = exports.fake = exports.mask = exports.dv = void 0;\nconst ValidationBRError_1 = __importDefault(require(\"./data/ValidationBRError\"));\nconst utils_1 = require(\"./utils\");\n/**\n * dv()\n * Calcula o dígito verificador\n *\n * @param {Number|String} value\n * @returns {String}\n */\nconst dv = (value) => {\n    const titulo = (0, utils_1.clearValue)(value, 10, {\n        fillZerosAtLeft: true,\n        trimAtRight: true,\n        rejectEmpty: true,\n    });\n    const sum1 = (0, utils_1.sumElementsByMultipliers)(titulo.substring(0, 8), [2, 3, 4, 5, 6, 7, 8, 9]);\n    const dv1 = sum1 % 11 >= 10 ? 0 : sum1 % 11;\n    const sum2 = (0, utils_1.sumElementsByMultipliers)(titulo.substring(8, 10) + dv1, [7, 8, 9]);\n    const dv2 = sum2 % 11 >= 10 ? 0 : sum2 % 11;\n    return `${dv1}${dv2}`;\n};\nexports.dv = dv;\n/**\n * Aplica uma máscara ao número informado\n *\n * @param {String} value Número de Processo\n * @returns {String} Valor com a máscara\n */\nconst mask = (value) => (0, utils_1.applyMask)(value, '0000.0000.0000');\nexports.mask = mask;\n/**\n * fake()\n * Gera um número válido\n *\n * @returns {String}\n */\nconst fake = (withMask = false) => {\n    const num = (0, utils_1.fakeNumber)(8, true);\n    const uf = (Math.random() * 27 + 1).toFixed(0).padStart(2, '0');\n    const titulo = `${num}${uf}${(0, exports.dv)(num + uf)}`;\n    if (withMask)\n        return (0, exports.mask)(titulo);\n    return titulo;\n};\nexports.fake = fake;\n/**\n * validateOrFail()\n * Valida se um número é válido e\n * retorna uma exceção se não estiver\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validateOrFail = (value) => {\n    const titulo = (0, utils_1.clearValue)(value, 12, {\n        fillZerosAtLeft: true,\n        rejectEmpty: true,\n        rejectHigherLength: true,\n        rejectEqualSequence: true,\n    });\n    if ((0, exports.dv)(titulo) !== titulo.substring(10, 12)) {\n        throw ValidationBRError_1.default.INVALID_DV;\n    }\n    return true;\n};\nexports.validateOrFail = validateOrFail;\n/**\n * validate()\n * Valida se um número é válido\n *\n * @param {String|Number} value Número a ser validado\n * @returns {Boolean}\n */\nconst validate = (value) => {\n    try {\n        return (0, exports.validateOrFail)(value);\n    }\n    catch (error) {\n        return false;\n    }\n};\nexports.validate = validate;\nexports.default = exports.validate;\n//# sourceMappingURL=tituloEleitor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNUP17 = exports.isTituloEleitor = exports.isRenavam = exports.isPostalCode = exports.isPIS = exports.isJudicialProcess = exports.isCPF = exports.isCNPJ = exports.isCNH = void 0;\nconst cnh_1 = require(\"./cnh\");\nconst cnpj_1 = require(\"./cnpj\");\nconst cpf_1 = require(\"./cpf\");\nconst judicialProcess_1 = require(\"./judicialProcess\");\nconst nup17_1 = require(\"./nup17\");\nconst pisPasep_1 = require(\"./pisPasep\");\nconst postalCode_1 = require(\"./postalCode\");\nconst renavam_1 = require(\"./renavam\");\nconst tituloEleitor_1 = require(\"./tituloEleitor\");\nconst isCNH = (value) => (0, cnh_1.validate)(value);\nexports.isCNH = isCNH;\nconst isCNPJ = (value) => (0, cnpj_1.validate)(value);\nexports.isCNPJ = isCNPJ;\nconst isCPF = (value) => (0, cpf_1.validate)(value);\nexports.isCPF = isCPF;\nconst isJudicialProcess = (value) => (0, judicialProcess_1.validate)(value);\nexports.isJudicialProcess = isJudicialProcess;\nconst isPIS = (value) => (0, pisPasep_1.validate)(value);\nexports.isPIS = isPIS;\nconst isPostalCode = (value) => (0, postalCode_1.validate)(value);\nexports.isPostalCode = isPostalCode;\nconst isRenavam = (value) => (0, renavam_1.validate)(value);\nexports.isRenavam = isRenavam;\nconst isTituloEleitor = (value) => (0, tituloEleitor_1.validate)(value);\nexports.isTituloEleitor = isTituloEleitor;\nconst isNUP17 = (value) => (0, nup17_1.validate)(value);\nexports.isNUP17 = isNUP17;\nexports.default = {\n    isCNH: exports.isCNH,\n    isCNPJ: exports.isCNPJ,\n    isCPF: exports.isCPF,\n    isJudicialProcess: exports.isJudicialProcess,\n    isPIS: exports.isPIS,\n    isPostalCode: exports.isPostalCode,\n    isRenavam: exports.isRenavam,\n    isTituloEleitor: exports.isTituloEleitor,\n    isNUP17: exports.isNUP17,\n};\n//# sourceMappingURL=index.js.map","/*import { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';*/\nconst { __ } = window.wp.i18n;\nconst { useState, useEffect } = window.wp.element;\n\nimport { useElementOptions } from './use-element-options';\nimport { isCPF, isCNPJ } from 'validation-br';\n\nconst baseTextInputStyles = 'wc-block-gateway-input paghiper_tax_id p-Input-input Input p-Input-input--textRight';\n\n/**\n * InlineTaxIdField component\n *\n * @param {Object} props Incoming props for the component.\n * @param {React.ReactElement} props.inputErrorComponent\n * @param {function(any):any} props.onChange\n */\nexport const InlineTaxIdField = ( {\n\tinputErrorComponent: ValidationInputError,\n\tonChange,\n    gatewayName\n} ) => {\n\tconst [ isEmpty, setIsEmpty ] = useState( true );\n\tconst [ isInvalid, setIsInvalid ] = useState( false );\n    const [ isComplete, setIsComplete ] = useState( false );\n\tconst [ fieldLabel, setFieldLabel ] = useState(__('CPF do Pagador', 'woo-boleto-paghiper'));\n    const [ fieldInput, setFieldInput ] = useState('');\n\tconst { options, isActive, isFocus, onActive, error, setError } = useElementOptions( {\n\t\thideIcon: true,\n\t} );\n\tconst errorCallback = ( event ) => {\n\t\tif ( event.error ) {\n\t\t\tsetError( event.error.message );\n\t\t} else {\n\t\t\tsetError( '' );\n\t\t}\n\t\tsetIsEmpty( event.empty );\n\t\tonChange( event );\n\n        if( !event.target.value ) {\n            setIsEmpty( true );\n        }\n    }\n\n    useEffect(() => {\n\n        if(fieldInput.replace(/\\D/g, '').length > 11) {\n            setFieldLabel(__('CNPJ do Pagador', 'woo-boleto-paghiper'));\n        } else {\n            setFieldLabel(__('CPF do Pagador', 'woo-boleto-paghiper'));\n        }\n\n        if(!isEmpty) {\n            if(!isFocus) {\n\n                if(fieldInput.replace(/\\D/g, '').length > 11 && fieldInput.replace(/\\D/g, '').length < 14) {\n                    setError(__('O número do seu CNPJ está incompleto.', 'woo-boleto-paghiper'));\n                    setIsInvalid(true);\n                } else if (fieldInput.replace(/\\D/g, '').length < 11) {\n                    setError(__('O número do seu CPF está incompleto.', 'woo-boleto-paghiper'));\n                    setIsInvalid(true);\n                }\n            } else {\n                if(fieldInput.replace(/\\D/g, '').length == 11) {\n                    // Valida CPF\n                    if(!isCPF(fieldInput)) {\n                        setError(__('O número do seu CPF não está correto.', 'woo-boleto-paghiper'));\n                        setIsInvalid(true);\n                    } else {\n                        setIsComplete(true);\n                    }\n                } else if(fieldInput.replace(/\\D/g, '').length == 14) {\n                    // Valida CNPJ\n                    if(!isCNPJ(fieldInput)) {\n                        setError(__('O número do seu CNPJ não está correto.', 'woo-boleto-paghiper'));\n                        setIsInvalid(true);\n                    } else {\n                        setIsComplete(true);\n                    }\n                }\n            }\n        } else {\n            setIsInvalid(false);\n            setIsComplete(false);\n        }\n\n\n    }, [fieldInput, isFocus]);\n\n    useEffect(() => {\n        setIsInvalid(false);\n        setIsComplete(false);\n        setError('');\n    }, [fieldInput]);\n\n    const taxIdMaskBehavior = (val, e) => {\n        return val.replace(/\\D/g, '').length > 11 ? '00.000.000/0000-00' : '000.000.000-009';\n    }\n\n    // Initialize mask everytime we render the component\n    useEffect(() => {\n\n        if(typeof jQuery('.paghiper_tax_id').mask === \"function\") {\n\n            jQuery('.paghiper_tax_id').mask(taxIdMaskBehavior, {\n                onKeyPress: function(val, e, field, options) {\n                    field.mask(taxIdMaskBehavior.apply({}, arguments), options);\n                }\n            });\n\n        } else {\n            console.log('Paghiper block failed to initialize TaxID mask')\n        }\n\t\n    }, [])\n\n\treturn (\n\t\t<>\n            <div className=\"wc-block-components-form\">\n                <div className={\"wc-block-gateway-container wc-block-components-text-input wc-inline-tax-id-element paghiper-taxid-fieldset\" + (isActive || !isEmpty ? ' is-active' : '')}>\n                    <input \n                        type=\"text\"\n                        id=\"wc-paghiper-inline-tax-id-element\"\n                        name={\"_\" + gatewayName + \"_cpf_cnpj\"}\n                        className={ baseTextInputStyles + (isEmpty ? ' empty Input--empty' : '') + (isInvalid ? ' invalid' : '') + (isComplete ? ' valid' : '')}\n                        onBlur={ () => onActive( isEmpty, false ) }\n                        onFocus={ () => onActive( isEmpty, true ) }\n                        onChange={ errorCallback }\n                        onInput={ e => setFieldInput(e.target.value) }\n                        aria-label={ fieldLabel }\n                        required\n                        title\n                    />\n                    <label htmlFor=\"wc-paghiper-inline-tax-id-element\">{ fieldLabel }</label>\n                    <ValidationInputError errorMessage={ error } />\n                </div>\n            </div>\n\t\t</>\n\t);\n};","// WordPress dependencies via window\nconst { __ } = window.wp.i18n;\nconst { useState, useEffect } = window.wp.element;\nconst { decodeEntities } = window.wp.htmlEntities;\n\nimport { InlineTaxIdField } from './elements';\n\n/*import { registerPaymentMethod } from '@woocommerce/blocks-registry';\nimport { ValidationInputError } from '@woocommerce/blocks-checkout';\nimport { getSetting } from '@woocommerce/settings';*/\n\nconst { registerPaymentMethod } = window.wc.wcBlocksRegistry;\nconst { ValidationInputError } \t= window.wc.blocksCheckout;\nconst { getSetting } \t\t\t= window.wc.wcSettings;\n\n// PIX Gateway\nconst pixSettings \t\t= getSetting( 'paghiper_pix_data', {} );\nconst defaultPixLabel \t= __( 'PIX Paghiper', 'woo-boleto-paghiper' )\nconst label \t\t\t= decodeEntities( pixSettings.title ) || defaultPixLabel\n\nconst Content = ( props ) => {\n\n\tif (typeof wc === 'undefined' || !wc.wcBlocksRegistry) {\n\t\tconsole.error('WooCommerce Blocks registry not found. Make sure WooCommerce Blocks is active and loaded.');\n\t\treturn;\n\t}\n\n\tif (typeof wc === 'undefined' || !wc.blocksCheckout) {\n\t\tconsole.error('WooCommerce Blocks Checkout not found. Make sure WooCommerce Blocks is active and loaded.');\n\t\treturn;\n\t}\n\n\tconst { eventRegistration, emitResponse } = props;\n\tconst { onPaymentSetup } = eventRegistration;\n\n\t\n    const [ taxID, setTaxID ] = useState('');\n    const [ payerName, setPayerName ] = useState('');\n\n\tuseEffect( () => {\n\t\tconst unsubscribe = onPaymentSetup( async () => {\n\t\t\t// Here we can do any processing we need, and then emit a response.\n\t\t\t// For example, we might validate a custom field, or perform an AJAX request, and then emit a response indicating it is valid or not.\n\n\t\t\tconst paghiperTaxId = taxID;\n\t\t\tconst paghiperTaxIdIsValid = !! paghiperTaxId.length;\n\t\t\tconst paghiperTaxIdFieldName = \"_\" + props.gatewayName + \"_cpf_cnpj\";\n\n\t\t\tif ( paghiperTaxIdIsValid ) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: emitResponse.responseTypes.SUCCESS,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tpaymentMethodData: {\n\t\t\t\t\t\t\t[ paghiperTaxIdFieldName ]: paghiperTaxId,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttype: emitResponse.responseTypes.ERROR,\n\t\t\t\tmessage: 'There was an error',\n\t\t\t};\n\t\t} );\n\t\t// Unsubscribes when this component is unmounted.\n\t\treturn () => {\n\t\t\tunsubscribe();\n\t\t};\n\t}, [\n\t\ttaxID,\n\t\temitResponse.responseTypes.ERROR,\n\t\temitResponse.responseTypes.SUCCESS,\n\t\tonPaymentSetup,\n\t] );\n\n\tconst onChange = ( paymentEvent ) => {\n\t\tif ( paymentEvent.error ) {\n\t\t\tconsole.log('Paghiper: Payment Error');\n\t\t}\n\n\t\tsetTaxID(paymentEvent.target.value.replace(/\\D/g, ''));\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<>{decodeEntities( props.gatewayDescription || '' )}</>\n\t\t\t<InlineTaxIdField \n\t\t\t\tgatewayName={ props.gatewayName }\n\t\t\t\tonChange={ onChange } \n\t\t\t\tinputErrorComponent={ ValidationInputError }\n\t\t\t/>\n\t\t</>)\n}\n\nconst Label = ( props ) => {\n\tconst { PaymentMethodLabel } = props.components\n\n\treturn <PaymentMethodLabel text={ label } />\n}\n\n// Define payment methods\nconst PaghiperPix = {\n\tname: \"paghiper_pix\",\n\tlabel: <Label />,\n\tcontent: <Content gatewayName=\"paghiper_pix\" gatewayDescription={ pixSettings.description } />,\n\tedit: <Content gatewayName=\"paghiper_pix\" gatewayDescription={ pixSettings.description } />,\n\tcanMakePayment: () => true,\n\tariaLabel: label,\n\tpaymentMethodId: \"paghiper_pix\",\n\tsupports: {\n\t\tfeatures: pixSettings.supports,\n\t}\n};\n\n// Billet\nconst billetSettings \t\t= getSetting( 'paghiper_billet_data', {} )\nconst defaultBilletLabel \t= __( 'Boleto Paghiper', 'woo-boleto-paghiper' )\nconst billetLabel \t\t\t= decodeEntities( billetSettings.title ) || defaultBilletLabel\n\nconst BilletLabel = ( props ) => {\n\tconst { PaymentMethodLabel } = props.components\n\treturn <PaymentMethodLabel text={ billetLabel } />\n}\n\n/*const PaghiperBillet = {\n\tname: \"paghiper_billet\",\n\tlabel: <BilletLabel />,\n\tcontent: <Content gatewayName=\"paghiper_billet\" gatewayDescription={ billetSettings.description } />,\n\tedit: <Content gatewayName=\"paghiper_billet\" gatewayDescription={ billetSettings.description } />,\n\tcanMakePayment: () => true,\n\tariaLabel: billetLabel,\n\tsupports: {\n\t\tfeatures: billetSettings.supports,\n\t}\n};*/\n\n// Register payment methods\nif (typeof window.wc.wcBlocksRegistry !== 'undefined') {\n    registerPaymentMethod(PaghiperPix);\n    //registerPaymentMethod(PaghiperBillet);\n}"],"names":["l","n","p","q","k","f","m","a","b","reactModule","require$$0","jsxRuntimeModule","__","useState","useEffect","isFocus","ValidationBRError_1","__importDefault","this","mask","utils_1","require$$1","dv","cnh","dv2","validateOrFail","validate","fake","cnpj","sum","cpf","judicialProcess","postalCode","renavam","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","ValidationInputError","isCPF","isCNPJ","options","jsx","Fragment","jsxs"],"mappings":";;;;;;;;;;;;;;AASa,IAAIA,MAAE,OAAO,IAAI,eAAe,GAAEC,MAAE,OAAO,IAAI,cAAc,GAAEC,MAAE,OAAO,IAAI,gBAAgB,GAAEC,MAAE,OAAO,IAAI,mBAAmB,GAAE,IAAE,OAAO,IAAI,gBAAgB,GAAE,IAAE,OAAO,IAAI,gBAAgB,GAAE,IAAE,OAAO,IAAI,eAAe,GAAE,IAAE,OAAO,IAAI,mBAAmB,GAAE,IAAE,OAAO,IAAI,gBAAgB,GAAE,IAAE,OAAO,IAAI,YAAY,GAAE,IAAE,OAAO,IAAI,YAAY,GAAE,IAAE,OAAO;AAAS,SAAS,EAAE,GAAE;AAAC,MAAG,SAAO,KAAG,aAAW,OAAO,EAAE,QAAO;AAAK,MAAE,KAAG,EAAE,CAAC,KAAG,EAAE,YAAY;AAAE,SAAM,eAAa,OAAO,IAAE,IAAE;AAAI;AAC1e,IAAI,IAAE,EAAC,WAAU,WAAU;AAAC,SAAM;AAAE,GAAE,oBAAmB,WAAU;AAAA,GAAG,qBAAoB,WAAU;AAAA,GAAG,iBAAgB,WAAU;AAAA,EAAE,GAAE,IAAE,OAAO,QAAO,IAAE;AAAG,SAAS,EAAE,GAAE,GAAE,GAAE;AAAC,OAAK,QAAM;AAAE,OAAK,UAAQ;AAAE,OAAK,OAAK;AAAE,OAAK,UAAQ,KAAG;AAAC;AAAC,EAAE,UAAU,mBAAiB,CAAA;AACnQ,EAAE,UAAU,WAAS,SAAS,GAAE,GAAE;AAAC,MAAG,aAAW,OAAO,KAAG,eAAa,OAAO,KAAG,QAAM,EAAE,OAAM,MAAM,uHAAuH;AAAE,OAAK,QAAQ,gBAAgB,MAAK,GAAE,GAAE,UAAU;AAAC;AAAE,EAAE,UAAU,cAAY,SAAS,GAAE;AAAC,OAAK,QAAQ,mBAAmB,MAAK,GAAE,aAAa;AAAC;AAAE,SAAS,IAAG;AAAA;AAAE,EAAE,YAAU,EAAE;AAAU,SAAS,EAAE,GAAE,GAAE,GAAE;AAAC,OAAK,QAAM;AAAE,OAAK,UAAQ;AAAE,OAAK,OAAK;AAAE,OAAK,UAAQ,KAAG;AAAC;AAAC,IAAI,IAAE,EAAE,YAAU,IAAI;AACrf,EAAE,cAAY;AAAE,EAAE,GAAE,EAAE,SAAS;AAAE,EAAE,uBAAqB;AAAG,IAAI,IAAE,MAAM,SAAQ,IAAE,OAAO,UAAU,gBAAe,IAAE,EAAC,SAAQ,KAAI,GAAE,IAAE,EAAC,KAAI,MAAG,KAAI,MAAG,QAAO,MAAG,UAAS,KAAE;AACxK,SAAS,EAAE,GAAE,GAAE,GAAE;AAAC,MAAI,GAAE,IAAE,CAAA,GAAGC,KAAE,MAAK,IAAE;AAAK,MAAG,QAAM,EAAE,MAAI,KAAK,WAAS,EAAE,QAAM,IAAE,EAAE,MAAK,WAAS,EAAE,QAAMA,KAAE,KAAG,EAAE,MAAK,EAAE,GAAE,KAAK,GAAE,CAAC,KAAG,CAAC,EAAE,eAAe,CAAC,MAAI,EAAE,CAAC,IAAE,EAAE,CAAC;AAAG,MAAI,IAAE,UAAU,SAAO;AAAE,MAAG,MAAI,EAAE,GAAE,WAAS;AAAA,WAAU,IAAE,GAAE;AAAC,aAAQC,KAAE,MAAM,CAAC,GAAEC,KAAE,GAAEA,KAAE,GAAEA,KAAI,CAAAD,GAAEC,EAAC,IAAE,UAAUA,KAAE,CAAC;AAAE,MAAE,WAASD;AAAA,EAAC;AAAC,MAAG,KAAG,EAAE,aAAa,MAAI,KAAK,IAAE,EAAE,cAAa,EAAE,YAAS,EAAE,CAAC,MAAI,EAAE,CAAC,IAAE,EAAE,CAAC;AAAG,SAAM,EAAC,UAASL,KAAE,MAAK,GAAE,KAAII,IAAE,KAAI,GAAE,OAAM,GAAE,QAAO,EAAE,QAAO;AAAC;AAC7a,SAAS,EAAE,GAAE,GAAE;AAAC,SAAM,EAAC,UAASJ,KAAE,MAAK,EAAE,MAAK,KAAI,GAAE,KAAI,EAAE,KAAI,OAAM,EAAE,OAAM,QAAO,EAAE,OAAM;AAAC;AAAC,SAAS,EAAE,GAAE;AAAC,SAAM,aAAW,OAAO,KAAG,SAAO,KAAG,EAAE,aAAWA;AAAC;AAAC,SAAS,OAAO,GAAE;AAAC,MAAI,IAAE,EAAC,KAAI,MAAK,KAAI,KAAI;AAAE,SAAM,MAAI,EAAE,QAAQ,SAAQ,SAASO,IAAE;AAAC,WAAO,EAAEA,EAAC;AAAA,EAAC,CAAC;AAAC;AAAC,IAAI,IAAE;AAAO,SAAS,EAAE,GAAE,GAAE;AAAC,SAAM,aAAW,OAAO,KAAG,SAAO,KAAG,QAAM,EAAE,MAAI,OAAO,KAAG,EAAE,GAAG,IAAE,EAAE,SAAS,EAAE;AAAC;AAC/W,SAAS,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE;AAAC,MAAIH,KAAE,OAAO;AAAE,MAAG,gBAAcA,MAAG,cAAYA,GAAE,KAAE;AAAK,MAAI,IAAE;AAAG,MAAG,SAAO,EAAE,KAAE;AAAA,MAAQ,SAAOA,IAAC;AAAA,IAAE,KAAK;AAAA,IAAS,KAAK;AAAS,UAAE;AAAG;AAAA,IAAM,KAAK;AAAS,cAAO,EAAE,UAAQ;AAAA,QAAE,KAAKJ;AAAAA,QAAE,KAAKC;AAAE,cAAE;AAAA,MAAE;AAAA,EAAC;AAAC,MAAG,EAAE,QAAO,IAAE,GAAE,IAAE,EAAE,CAAC,GAAE,IAAE,OAAK,IAAE,MAAI,EAAE,GAAE,CAAC,IAAE,GAAE,EAAE,CAAC,KAAG,IAAE,IAAG,QAAM,MAAI,IAAE,EAAE,QAAQ,GAAE,KAAK,IAAE,MAAK,EAAE,GAAE,GAAE,GAAE,IAAG,SAASM,IAAE;AAAC,WAAOA;AAAA,EAAC,CAAC,KAAG,QAAM,MAAI,EAAE,CAAC,MAAI,IAAE,EAAE,GAAE,KAAG,CAAC,EAAE,OAAK,KAAG,EAAE,QAAM,EAAE,MAAI,MAAI,KAAG,EAAE,KAAK,QAAQ,GAAE,KAAK,IAAE,OAAK,CAAC,IAAG,EAAE,KAAK,CAAC,IAAG;AAAE,MAAE;AAAE,MAAE,OAAK,IAAE,MAAI,IAAE;AAAI,MAAG,EAAE,CAAC,EAAE,UAAQ,IAAE,GAAE,IAAE,EAAE,QAAO,KAAI;AAAC,IAAAH,KACrf,EAAE,CAAC;AAAE,QAAIC,KAAE,IAAE,EAAED,IAAE,CAAC;AAAE,SAAG,EAAEA,IAAE,GAAE,GAAEC,IAAE,CAAC;AAAA,EAAC;AAAA,WAASA,KAAE,EAAE,CAAC,GAAE,eAAa,OAAOA,GAAE,MAAI,IAAEA,GAAE,KAAK,CAAC,GAAE,IAAE,GAAE,EAAED,KAAE,EAAE,QAAQ,OAAM,CAAAA,KAAEA,GAAE,OAAMC,KAAE,IAAE,EAAED,IAAE,GAAG,GAAE,KAAG,EAAEA,IAAE,GAAE,GAAEC,IAAE,CAAC;AAAA,WAAU,aAAWD,GAAE,OAAM,IAAE,OAAO,CAAC,GAAE,MAAM,qDAAmD,sBAAoB,IAAE,uBAAqB,OAAO,KAAK,CAAC,EAAE,KAAK,IAAI,IAAE,MAAI,KAAG,2EAA2E;AAAE,SAAO;AAAC;AACzZ,SAAS,EAAE,GAAE,GAAE,GAAE;AAAC,MAAG,QAAM,EAAE,QAAO;AAAE,MAAI,IAAE,CAAA,GAAG,IAAE;AAAE,IAAE,GAAE,GAAE,IAAG,IAAG,SAASG,IAAE;AAAC,WAAO,EAAE,KAAK,GAAEA,IAAE,GAAG;AAAA,EAAC,CAAC;AAAE,SAAO;AAAC;AAAC,SAAS,EAAE,GAAE;AAAC,MAAG,OAAK,EAAE,SAAQ;AAAC,QAAI,IAAE,EAAE;AAAQ,QAAE,EAAC;AAAG,MAAE,KAAK,SAASC,IAAE;AAAC,UAAG,MAAI,EAAE,WAAS,OAAK,EAAE,QAAQ,GAAE,UAAQ,GAAE,EAAE,UAAQA;AAAA,IAAC,GAAE,SAASA,IAAE;AAAC,UAAG,MAAI,EAAE,WAAS,OAAK,EAAE,QAAQ,GAAE,UAAQ,GAAE,EAAE,UAAQA;AAAA,IAAC,CAAC;AAAE,WAAK,EAAE,YAAU,EAAE,UAAQ,GAAE,EAAE,UAAQ;AAAA,EAAE;AAAC,MAAG,MAAI,EAAE,QAAQ,QAAO,EAAE,QAAQ;AAAQ,QAAM,EAAE;AAAQ;AAC5Z,IAAI,IAAE,EAAC,SAAQ,KAAI,GAAE,IAAE,EAAC,YAAW,KAAI,GAAE,IAAE,EAAC,wBAAuB,GAAE,yBAAwB,GAAE,mBAAkB,EAAC;AAAE,SAAS,IAAG;AAAC,QAAM,MAAM,0DAA0D;AAAE;AACzM,qBAAA,WAAiB,EAAC,KAAI,GAAE,SAAQ,SAAS,GAAE,GAAE,GAAE;AAAC,IAAE,GAAE,WAAU;AAAC,MAAE,MAAM,MAAK,SAAS;AAAA,EAAC,GAAE,CAAC;AAAC,GAAE,OAAM,SAAS,GAAE;AAAC,MAAI,IAAE;AAAE,IAAE,GAAE,WAAU;AAAC;AAAA,EAAG,CAAC;AAAE,SAAO;AAAC,GAAE,SAAQ,SAAS,GAAE;AAAC,SAAO,EAAE,GAAE,SAASD,IAAE;AAAC,WAAOA;AAAA,EAAC,CAAC,KAAG,CAAA;AAAE,GAAE,MAAK,SAAS,GAAE;AAAC,MAAG,CAAC,EAAE,CAAC,EAAE,OAAM,MAAM,uEAAuE;AAAE,SAAO;AAAC,EAAC;AAAE,qBAAA,YAAkB;AAAE,qBAAA,WAAiBL;AAAE,qBAAA,WAAiB;AAAE,qBAAA,gBAAsB;AAAE,qBAAA,aAAmBC;AAAE,qBAAA,WAAiB;AAClc,qBAAA,qDAA2D;AAAE,qBAAA,MAAY;AACzE,qBAAA,eAAqB,SAAS,GAAE,GAAE,GAAE;AAAC,MAAG,SAAO,KAAG,WAAS,EAAE,OAAM,MAAM,mFAAiF,IAAE,GAAG;AAAE,MAAI,IAAE,EAAE,CAAA,GAAG,EAAE,KAAK,GAAE,IAAE,EAAE,KAAIC,KAAE,EAAE,KAAI,IAAE,EAAE;AAAO,MAAG,QAAM,GAAE;AAAC,eAAS,EAAE,QAAMA,KAAE,EAAE,KAAI,IAAE,EAAE;AAAS,eAAS,EAAE,QAAM,IAAE,KAAG,EAAE;AAAK,QAAG,EAAE,QAAM,EAAE,KAAK,aAAa,KAAI,IAAE,EAAE,KAAK;AAAa,SAAIC,MAAK,EAAE,GAAE,KAAK,GAAEA,EAAC,KAAG,CAAC,EAAE,eAAeA,EAAC,MAAI,EAAEA,EAAC,IAAE,WAAS,EAAEA,EAAC,KAAG,WAAS,IAAE,EAAEA,EAAC,IAAE,EAAEA,EAAC;AAAA,EAAE;AAAC,MAAIA,KAAE,UAAU,SAAO;AAAE,MAAG,MAAIA,GAAE,GAAE,WAAS;AAAA,WAAU,IAAEA,IAAE;AAAC,QAAE,MAAMA,EAAC;AACtf,aAAQC,KAAE,GAAEA,KAAED,IAAEC,KAAI,GAAEA,EAAC,IAAE,UAAUA,KAAE,CAAC;AAAE,MAAE,WAAS;AAAA,EAAC;AAAC,SAAM,EAAC,UAASN,KAAE,MAAK,EAAE,MAAK,KAAI,GAAE,KAAII,IAAE,OAAM,GAAE,QAAO,EAAC;AAAC;AAAE,qBAAA,gBAAsB,SAAS,GAAE;AAAC,MAAE,EAAC,UAAS,GAAE,eAAc,GAAE,gBAAe,GAAE,cAAa,GAAE,UAAS,MAAK,UAAS,MAAK,eAAc,MAAK,aAAY,KAAI;AAAE,IAAE,WAAS,EAAC,UAAS,GAAE,UAAS,EAAC;AAAE,SAAO,EAAE,WAAS;AAAC;AAAE,qBAAA,gBAAsB;qCAAwB,SAAS,GAAE;AAAC,MAAI,IAAE,EAAE,KAAK,MAAK,CAAC;AAAE,IAAE,OAAK;AAAE,SAAO;AAAC;AAAE,qBAAA,YAAkB,WAAU;AAAC,SAAM,EAAC,SAAQ,KAAI;AAAC;AAC9d,qBAAA,aAAmB,SAAS,GAAE;AAAC,SAAM,EAAC,UAAS,GAAE,QAAO,EAAC;AAAC;AAAE,qBAAA,iBAAuB;AAAE,qBAAA,OAAa,SAAS,GAAE;AAAC,SAAM,EAAC,UAAS,GAAE,UAAS,EAAC,SAAQ,IAAG,SAAQ,EAAC,GAAE,OAAM,EAAC;AAAC;AAAE,qBAAA,OAAa,SAAS,GAAE,GAAE;AAAC,SAAM,EAAC,UAAS,GAAE,MAAK,GAAE,SAAQ,WAAS,IAAE,OAAK,EAAC;AAAC;AAAE,qBAAA,kBAAwB,SAAS,GAAE;AAAC,MAAI,IAAE,EAAE;AAAW,IAAE,aAAW;AAAG,MAAG;AAAC;EAAG,UAAC;AAAQ,MAAE,aAAW;AAAA,EAAC;AAAC;AAAE,qBAAA,eAAqB;mCAAsB,SAAS,GAAE,GAAE;AAAC,SAAO,EAAE,QAAQ,YAAY,GAAE,CAAC;AAAC;AAAE,qBAAA,aAAmB,SAAS,GAAE;AAAC,SAAO,EAAE,QAAQ,WAAW,CAAC;AAAC;AAC3f,qBAAA,gBAAsB,WAAU;AAAA;AAAG,qBAAA,mBAAyB,SAAS,GAAE;AAAC,SAAO,EAAE,QAAQ,iBAAiB,CAAC;AAAC;AAAE,qBAAA,YAAkB,SAAS,GAAE,GAAE;AAAC,SAAO,EAAE,QAAQ,UAAU,GAAE,CAAC;AAAC;AAAE,qBAAA,QAAc,WAAU;AAAC,SAAO,EAAE,QAAQ,MAAK;AAAE;AAAE,qBAAA,sBAA4B,SAAS,GAAE,GAAE,GAAE;AAAC,SAAO,EAAE,QAAQ,oBAAoB,GAAE,GAAE,CAAC;AAAC;AAAE,qBAAA,qBAA2B,SAAS,GAAE,GAAE;AAAC,SAAO,EAAE,QAAQ,mBAAmB,GAAE,CAAC;AAAC;AAAE,qBAAA,kBAAwB,SAAS,GAAE,GAAE;AAAC,SAAO,EAAE,QAAQ,gBAAgB,GAAE,CAAC;AAAC;AACzd,qBAAA,UAAgB,SAAS,GAAE,GAAE;AAAC,SAAO,EAAE,QAAQ,QAAQ,GAAE,CAAC;AAAC;AAAE,qBAAA,aAAmB,SAAS,GAAE,GAAE,GAAE;AAAC,SAAO,EAAE,QAAQ,WAAW,GAAE,GAAE,CAAC;AAAC;AAAE,qBAAA,SAAe,SAAS,GAAE;AAAC,SAAO,EAAE,QAAQ,OAAO,CAAC;AAAC;AAAE,qBAAA,WAAiB,SAAS,GAAE;AAAC,SAAO,EAAE,QAAQ,SAAS,CAAC;AAAC;AAAE,qBAAA,uBAA6B,SAAS,GAAE,GAAE,GAAE;AAAC,SAAO,EAAE,QAAQ,qBAAqB,GAAE,GAAE,CAAC;AAAC;AAAE,qBAAA,gBAAsB,WAAU;AAAC,SAAO,EAAE,QAAQ,cAAa;AAAE;AAAE,qBAAA,UAAgB;ACvBzX;AACzCK,QAAA,UAAiBC;AACnB;;;;;;;;;;;ACKa,IAAI,IAAEA,cAAiB,IAAE,OAAO,IAAI,eAAe,GAAE,IAAE,OAAO,IAAI,gBAAgB,GAAE,IAAE,OAAO,UAAU,gBAAe,IAAE,EAAE,mDAAmD,mBAAkB,IAAE,EAAC,KAAI,MAAG,KAAI,MAAG,QAAO,MAAG,UAAS,KAAE;AAClP,SAAS,EAAE,GAAE,GAAE,GAAE;AAAC,MAAI,GAAE,IAAE,IAAG,IAAE,MAAK,IAAE;AAAK,aAAS,MAAI,IAAE,KAAG;AAAG,aAAS,EAAE,QAAM,IAAE,KAAG,EAAE;AAAK,aAAS,EAAE,QAAM,IAAE,EAAE;AAAK,OAAI,KAAK,EAAE,GAAE,KAAK,GAAE,CAAC,KAAG,CAAC,EAAE,eAAe,CAAC,MAAI,EAAE,CAAC,IAAE,EAAE,CAAC;AAAG,MAAG,KAAG,EAAE,aAAa,MAAI,KAAK,IAAE,EAAE,cAAa,cAAW,EAAE,CAAC,MAAI,EAAE,CAAC,IAAE,EAAE,CAAC;AAAG,SAAM,EAAC,UAAS,GAAE,MAAK,GAAE,KAAI,GAAE,KAAI,GAAE,OAAM,GAAE,QAAO,EAAE,QAAO;AAAC;0CAAkB;AAAE,+BAAA,MAAY;AAAE,+BAAA,OAAa;ACR/T;AACzCC,aAAA,UAAiBD;AACnB;;ACJA,MAAM,EAAA,IAAEE,KAAA,IAAO,OAAO,GAAG;AACzB,MAAM,EAAA,UAAEC,YAAA,WAAUC,aAAW,YAAA,IAAgB,OAAO,GAAG;AAiBvD,MAAM,mBAAmB,CAAE,UAAU,UAAU,iBAAkB;AAChE,MAAI,eAAe,CAAA;AAEnB,MACC,OAAO,aAAa,YACpB,OAAO,SAAS,kBAAkB,cAClC,OAAO,OAAO,qBAAqB,YAClC;AACD,UAAM,UAAU,SAAS,cAAe,QAAS;AACjD,QAAK,SAAU;AACd,qBAAe,OAAO,iBAAkB,OAAQ;AAAA,IACjD;AAAA,EACD;AAEA,SAAO,aAAc,QAAS,KAAK;AACpC;AAKA,MAAM,iBAAiB;AAAA,EACtB,OAAO;AAAA,IACN,MAAM;AAAA,MACL,WAAW;AAAA,MACX,OAAO;AAAA,MACP,UAAU;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,MAED,YAAY;AAAA;AAAA,MACZ,iBAAiB;AAAA,QAChB,OAAO;AAAA,MAAA;AAAA,IACR;AAAA,EACD;AAAA,EAED,SAAS;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,EAAA;AAEX;AAUO,MAAM,oBAAoB,CAAE,sBAAuB;AACzD,QAAM,CAAE,UAAU,WAAY,IAAID,WAAU,KAAM;AAClD,QAAM,CAAE,SAAS,UAAW,IAAIA,WAAU,KAAM;AAChD,QAAM,CAAE,SAAS,UAAW,IAAIA,WAAU;AAAA,IACzC,GAAG;AAAA,IACH,GAAG;AAAA,EAAA,CACF;AACF,QAAM,CAAE,OAAO,QAAS,IAAIA,WAAU,EAAG;AAEzCC,cAAW,MAAM;AAChB,UAAM,QAAQ,WAAW,YAAY;AAErC,eAAY,CAAE,gBAAiB;AAC9B,UAAI;AAEJ,UAAK,YAAY,aAAa,OAAQ;AACrC,mBAAW,EAAE,UAAU,MAAA;AAAA,MACxB,WAAY,OAAO,YAAY,aAAa,aAAc;AACzD,mBAAW,EAAE,UAAU,SAAA;AAAA,MACxB,OAAO;AACN,mBAAW,CAAA;AAAA,MACZ;AACA,aAAO;AAAA,QACN,GAAG;AAAA,QACH,OAAO;AAAA,UACN,GAAG,YAAY;AAAA,UACf,MAAM;AAAA,YACL,GAAG,YAAY,MAAM;AAAA,YACrB,iBAAiB;AAAA,cAChB;AAAA,YAAA;AAAA,UACD;AAAA,QACD;AAAA,QAED,GAAG;AAAA,MAAA;AAAA,IAEL,CAAE;AAAA,EACH,GAAG,CAAE,QAAS,CAAE;AAEhB,QAAM,WAAW;AAAA,IAChB,CAAE,SAASC,aAAa;AACvB,UAAK,CAAE,SAAU;AAChB,oBAAa,IAAK;AAAA,MACnB,OAAO;AACN,oBAAa,CAAE,eAAgB,CAAE,UAAW;AAAA,MAC7C;AAEA,UAAGA,UAAS;AACX,mBAAW,IAAI;AAAA,MAChB,OAAO;AACN,mBAAW,KAAK;AAAA,MACjB;AAAA,IACD;AAAA,IACA,CAAE,aAAa,UAAW;AAAA,EAAA;AAE3B,SAAO,EAAE,SAAS,UAAU,SAAS,UAAU,OAAO,SAAA;AACvD;;;;AC3HA,OAAO,eAAeC,qBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,MAAM,0BAA0B,MAAM;AACtC;AACA,kBAAkB,aAAa,IAAI,kBAAkB,6BAA6B;AAClF,kBAAkB,cAAc,IAAI,kBAAkB,sBAAsB;AAC5E,kBAAkB,mBAAmB,IAAI,kBAAkB,+BAA+B;AAC1F,kBAAkB,oBAAoB,IAAI,kBAAkB,8CAA8C;AAC1GA,oBAAA,UAAkB;;ACPlB,IAAIC,oBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAC3D;AACA,OAAO,eAAe,OAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,MAAA,UAAkB;AAClB,MAAA,wBAAgC;AAChC,MAAA,2BAAmC;AACnC,MAAA,aAAqB;AACrB,MAAA,aAAqB;AACrB,MAAA,mBAA2B;AAC3B,MAAA,qBAA6B;AAC7B,MAAA,YAAoB;AACpB,MAAA,eAAuB;AACvB,MAAMF,wBAAsBC,kBAAgBP,mBAAmC;AAS/E,SAAS,QAAQ,KAAK;AAClB,SAAO,MAAM,KAAK,IAAI,IAAI,KAAM,MAAM;AAC1C;AAWA,SAAS,sBAAsB,OAAO;AAClC,SAAO,CAAC,GAAG,KAAK,EAAE,MAAM,WAAS,UAAU,MAAM,CAAC,CAAC;AACvD;AAaA,SAAS,yBAAyB,OAAO,YAAY;AACjD,SAAO,WAAW,OAAO,CAAC,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,CAAC,CAAC,GAAG,CAAC;AACjF;AAaA,SAAS,WAAW,QAAQ,cAAc,OAAO,UAAU,OAAO;AAC9D,MAAI;AACJ,MAAI;AACA,YAAQ,KAAK,MAAM,KAAK,OAAM,IAAK,MAAM,MAAM,EAAE,SAAS,EAAE,EAAE,kBAAiB;AAAA;AAE/E,YAAQ,KAAK,MAAM,KAAK,OAAM,IAAK,MAAM,MAAM,EAAE,SAAQ;AAC7D,MAAI;AACA,WAAO,OAAO,KAAK,EAAE,SAAS,QAAQ,GAAG;AAC7C,SAAO,OAAO,KAAK;AACvB;AAmBA,SAAS,WAAW,OAAO,SAAS,MAAM,SAAS;AAC/C,MAAI,eAAe,OAAO,KAAK,EAAE,QAAQ,cAAc,EAAE;AACzD,MAAI,SAAS;AACT,UAAM,oBAAoB,QAAQ,gBAAgB,QAAQ,aAAa,WAAW;AAClF,QAAI,mBAAmB;AACnB,YAAMM,sBAAoB,QAAQ;AAAA,IAC9C;AACQ,UAAM,2BAA2B,QAAQ,uBAAuB,QAAQ,UAAU,aAAa,SAAS;AACxG,QAAI,0BAA0B;AAC1B,YAAMA,sBAAoB,QAAQ;AAAA,IAC9C;AACQ,UAAM,4BAA4B,QAAQ,wBAAwB,QAAQ;AAC1E,QAAI,2BAA2B;AAC3B,UAAI,sBAAsB,YAAY;AAClC,cAAMA,sBAAoB,QAAQ;AAAA,IAClD;AACQ,QAAI,UAAU,QAAQ;AAClB,qBAAe,aAAa,SAAS,QAAQ,GAAG;AACpD,QAAI,UAAU,QAAQ;AAClB,qBAAe,aAAa,UAAU,GAAG,MAAM;AAAA,EAC3D;AACI,SAAO;AACX;AAeA,SAAS,iBAAiB,OAAO,aAAa,UAAU;AACpD,SAAO,GAAG,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,WAAW,GAAG,MAAM,UAAU,QAAQ,CAAC;AACpF;AAeA,SAAS,mBAAmB,OAAO,eAAe,aAAa;AAC3D,SAAO,CAAC,MAAM,MAAM,GAAG,aAAa,GAAG,MAAM,MAAM,WAAW,CAAC,EAAE,KAAK,EAAE;AAC5E;AAcA,SAAS,UAAU,OAAOG,OAAM;AAC5B,QAAM,UAAU,WAAWA,KAAI,EAAE;AACjC,MAAI,SAAS,WAAW,OAAO,SAAS,EAAE,iBAAiB,MAAM,aAAa,MAAM;AACpF,QAAM,eAAe,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAClD,WAAS,WAAW,GAAG,WAAWA,MAAK,QAAQ,YAAY,GAAG;AAC1D,UAAM,UAAUA,MAAK,QAAQ;AAC7B,QAAI,aAAa,SAAS,OAAO;AAC7B,eAAS,iBAAiB,QAAQ,SAAS,QAAQ;AAAA,EAC/D;AACI,SAAO;AACX;AAWA,SAAS,eAAe;AACpB,QAAM,MAAM,KAAK,MAAM,IAAI,KAAK,OAAM,IAAK,EAAE;AAC7C,SAAO,OAAO,aAAa,MAAM,EAAE;AACvC;AAAA;ACpIA,MAAIF,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAAA,EAC3D;AACA,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,OAAe,eAAe,QAAA,WAAmB,QAAA,iBAAyB,QAAA,KAAa;AACvF,QAAMF,uBAAsBC,iBAAgBP,mBAAmC;AAC/E,QAAMU,WAAUC;AAMhB,QAAMC,MAAK,CAAC,UAAU;AAClB,UAAMC,QAAM,GAAIH,SAAQ,YAAY,OAAO,GAAG;AAAA,MAC1C,aAAa;AAAA,MACb,aAAa;AAAA,IACrB,CAAK;AACD,UAAM,QAAO,GAAIA,SAAQ,0BAA0BG,KAAI,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;AACpG,UAAM,OAAM,GAAIH,SAAQ,SAAS,IAAI;AACrC,UAAM,WAAWA,SAAQ,0BAA0BG,KAAI,UAAU,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC;AAC9G,UAAMC,QAAM,GAAIJ,SAAQ,SAAS,IAAI;AACrC,WAAO,GAAG,GAAG,GAAGI,IAAG;AAAA,EACvB;AACA,UAAA,KAAaF;AASb,QAAMG,kBAAiB,CAAC,UAAU;AAC9B,UAAMF,QAAM,GAAIH,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC3C,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,IAC7B,CAAK;AACD,SAAI,GAAI,QAAQ,IAAIG,IAAG,MAAMA,KAAI,UAAU,GAAG,EAAE,GAAG;AAC/C,YAAMP,qBAAoB,QAAQ;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AACA,UAAA,iBAAyBS;AAQzB,QAAMC,YAAW,CAAC,UAAU;AACxB,QAAI;AACA,cAAQ,GAAG,QAAQ,gBAAgB,KAAK;AAAA,IAChD,SACW,OAAO;AACV,aAAO;AAAA,IACf;AAAA,EACA;AACA,UAAA,WAAmBA;AAMnB,QAAMP,QAAO,CAAC,WAAU,GAAIC,SAAQ,WAAW,OAAO,cAAc;AACpE,UAAA,OAAeD;AAMf,QAAMQ,QAAO,CAAC,WAAW,UAAU;AAC/B,UAAM,SAAQ,GAAIP,SAAQ,YAAY,GAAG,IAAI;AAC7C,UAAMG,OAAM,GAAG,KAAK,IAAG,GAAI,QAAQ,IAAI,KAAK,CAAC;AAC7C,QAAI;AACA,cAAO,GAAI,QAAQ,MAAMA,IAAG;AAChC,WAAOA;AAAA,EACX;AACA,UAAA,OAAeI;AACf,UAAA,UAAkB,QAAQ;;;AC1D1B,IAAI,kBAAmBT,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAC3D;AACA,OAAO,eAAe,MAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,KAAA,KAAa;AACb,KAAA,OAAe;AACf,KAAA,OAAe;AACf,KAAA,iBAAyB;AACzB,KAAA,WAAmB;AACnB,MAAM,sBAAsB,gBAAgBR,mBAAmC;AAC/E,MAAM,UAAUW;AAChB,SAAS,GAAG,OAAO;AACf,QAAMO,SAAO,GAAI,QAAQ,YAAY,OAAO,IAAI;AAAA,IAC5C,aAAa;AAAA,IACb,aAAa;AAAA,EACrB,CAAK;AACD,QAAM,aAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtD,QAAM,MAAM,iBAAiBA,MAAK,UAAU,GAAG,EAAE,GAAG,UAAU;AAC9D,QAAM,aAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACzD,QAAM,MAAM,iBAAiBA,MAAK,UAAU,GAAG,EAAE,IAAI,KAAK,UAAU;AACpE,SAAO,GAAG,GAAG,GAAG,GAAG;AACvB;AAOA,SAAS,KAAK,OAAO;AACjB,aAAW,QAAQ,WAAW,OAAO,oBAAoB;AAC7D;AACA,SAAS,KAAK,QAAQ,OAAO;AACzB,QAAM,UAAU,OAAO,UAAU,YAC3B,EAAE,UAAU,OAAO,cAAc,KAAI,IACrC,EAAE,UAAU,OAAO,cAAc,MAAM,GAAG,MAAK;AACrD,QAAM,OAAM,GAAI,QAAQ,YAAY,IAAI,MAAM,QAAQ,YAAY;AAClE,QAAMA,QAAO,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC7B,MAAI,QAAQ;AACR,WAAO,KAAKA,KAAI;AACpB,SAAOA;AACX;AASA,SAAS,eAAe,OAAO;AAC3B,QAAMA,SAAO,GAAI,QAAQ,YAAY,OAAO,IAAI;AAAA,IAC5C,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,oBAAoB;AAAA,IACpB,qBAAqB;AAAA,EAC7B,CAAK;AACD,MAAI,GAAGA,KAAI,MAAMA,MAAK,UAAU,IAAI,EAAE,GAAG;AACrC,UAAM,oBAAoB,QAAQ;AAAA,EAC1C;AACI,SAAO;AACX;AAQA,SAAS,SAAS,OAAO;AACrB,MAAI;AACA,WAAO,eAAe,KAAK;AAAA,EACnC,SACW,OAAO;AACV,WAAO;AAAA,EACf;AACA;AACA,KAAA,UAAkB;AAOlB,SAAS,oBAAoB,WAAW;AACpC,MAAI,OAAO,KAAK,SAAS;AACrB,WAAO,CAAC;AACZ,QAAM,QAAQ,UAAU,kBAAiB,EAAG,WAAW,CAAC,IAAI;AAC5D,SAAO;AACX;AAMA,SAAS,iBAAiB,OAAO,YAAY;AACzC,QAAM,MAAM,CAAC,GAAG,KAAK,EAChB,IAAI,eAAa,oBAAoB,SAAS,CAAC,EAC/C,OAAO,CAACC,MAAK,WAAW,UAAUA,OAAM,YAAY,WAAW,KAAK,GAAG,CAAC;AAC7E,UAAO,GAAI,QAAQ,SAAS,GAAG;AACnC;;;ACtHA,MAAIZ,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAAA,EAC3D;AACA,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,WAAmB,yBAAyB,QAAA,OAAe,QAAA,OAAe,QAAA,KAAa;AACvF,QAAMF,uBAAsBC,iBAAgBP,mBAAmC;AAC/E,QAAMU,WAAUC;AAQhB,QAAMC,MAAK,CAAC,UAAU;AAClB,UAAMQ,QAAM,GAAIV,SAAQ,YAAY,OAAO,GAAG;AAAA,MAC1C,aAAa;AAAA,MACb,aAAa;AAAA,IACrB,CAAK;AACD,UAAM,QAAO,GAAIA,SAAQ,0BAA0BU,MAAK,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACpF,UAAM,OAAM,GAAIV,SAAQ,SAAS,IAAI;AACrC,UAAM,QAAO,GAAIA,SAAQ,0BAA0BU,OAAM,KAAK,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAC9F,UAAMN,QAAM,GAAIJ,SAAQ,SAAS,IAAI;AACrC,WAAO,GAAG,GAAG,GAAGI,IAAG;AAAA,EACvB;AACA,UAAA,KAAaF;AAOb,QAAMH,QAAO,CAAC,WAAU,GAAIC,SAAQ,WAAW,OAAO,gBAAgB;AACtE,UAAA,OAAeD;AAOf,QAAMQ,QAAO,CAAC,WAAW,UAAU;AAC/B,UAAM,OAAM,GAAIP,SAAQ,YAAY,GAAG,IAAI;AAC3C,UAAMU,OAAM,GAAG,GAAG,IAAG,GAAI,QAAQ,IAAI,GAAG,CAAC;AACzC,QAAI;AACA,cAAO,GAAI,QAAQ,MAAMA,IAAG;AAChC,WAAOA;AAAA,EACX;AACA,UAAA,OAAeH;AASf,QAAMF,kBAAiB,CAAC,UAAU;AAC9B,UAAMK,QAAM,GAAIV,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC3C,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,IAC7B,CAAK;AACD,SAAI,GAAI,QAAQ,IAAIU,IAAG,MAAMA,KAAI,UAAU,GAAG,EAAE,GAAG;AAC/C,YAAMd,qBAAoB,QAAQ;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AACA,UAAA,iBAAyBS;AAQzB,QAAMC,YAAW,CAAC,UAAU;AACxB,QAAI;AACA,cAAQ,GAAG,QAAQ,gBAAgB,KAAK;AAAA,IAChD,SACW,OAAO;AACV,aAAO;AAAA,IACf;AAAA,EACA;AACA,UAAA,WAAmBA;AACnB,UAAA,UAAkB,QAAQ;;;;ACjE1B,MAAIT,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAAA,EAC3D;AACA,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,WAAmB,yBAAyB,QAAA,OAAe,QAAA,OAAe,QAAA,KAAa;AACvF,UAAA,eAAuB;AACvB,QAAMF,uBAAsBC,iBAAgBP,mBAAmC;AAC/E,QAAMU,WAAUC;AAKhB,QAAMC,MAAK,CAAC,UAAU;AAClB,UAAMS,oBAAkB,GAAIX,SAAQ,YAAY,OAAO,IAAI,EAAE,aAAa,MAAM,aAAa,KAAI,CAAE;AACnG,UAAM,MAAMW,iBAAgB,UAAU,GAAG,CAAC;AAC1C,UAAM,eAAeA,iBAAgB,UAAU,GAAG,EAAE;AACpD,UAAM,SAASA,iBAAgB,UAAU,IAAI,EAAE;AAC/C,WAAO,OAAO,KAAM,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,IAAI,EAAE,GAAG,YAAY,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,IAAI,EAAG,EAAE,SAAS,GAAG,GAAG;AAAA,EACxH;AACA,UAAA,KAAaT;AAOb,QAAMH,QAAO,CAAC,WAAU,GAAIC,SAAQ,WAAW,OAAO,2BAA2B;AACjF,UAAA,OAAeD;AAKf,QAAMQ,QAAO,CAAC,WAAW,UAAU;AAC/B,UAAM,OAAM,GAAIP,SAAQ,YAAY,GAAG,IAAI;AAC3C,UAAM,QAAO,oBAAI,QAAO,YAAW,IAAK,EAAC,GAAIA,SAAQ,YAAY,CAAC;AAClE,QAAI,WAAU,GAAIA,SAAQ,YAAY,GAAG,IAAI;AAC7C,cAAU,YAAY,MAAM,MAAM;AAClC,UAAM,UAAU,aAAY;AAC5B,UAAM,SAAS,GAAG,OAAO,GAAG,OAAO;AACnC,UAAM,UAAS,GAAIA,SAAQ,YAAY,GAAG,IAAI;AAC9C,UAAMW,mBAAkB,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,MAAM;AACvD,UAAM,UAAS,GAAI,QAAQ,IAAIA,gBAAe;AAC9C,UAAM,eAAc,GAAIX,SAAQ,kBAAkBW,kBAAiB,QAAQ,CAAC;AAC5E,QAAI;AACA,cAAO,GAAI,QAAQ,MAAM,WAAW;AACxC,WAAO;AAAA,EACX;AACA,UAAA,OAAeJ;AASf,QAAMF,kBAAiB,CAAC,UAAU;AAC9B,UAAMM,oBAAkB,GAAIX,SAAQ,YAAY,OAAO,IAAI;AAAA,MACvD,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,oBAAoB;AAAA,IAC5B,CAAK;AACD,UAAM,oBAAmB,GAAIA,SAAQ,oBAAoBW,kBAAiB,GAAG,CAAC;AAC9E,QAAI,iBAAiB,UAAU,IAAI,EAAE,MAAM,KAAK;AAC5C,YAAM,IAAI,MAAM,6CAA6C;AAAA,IACrE;AACI,SAAI,GAAI,QAAQ,IAAI,gBAAgB,MAAMA,iBAAgB,UAAU,GAAG,CAAC,GAAG;AACvE,YAAMf,qBAAoB,QAAQ;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AACA,UAAA,iBAAyBS;AAQzB,QAAMC,YAAW,CAAC,UAAU;AACxB,QAAI;AACA,cAAQ,GAAG,QAAQ,gBAAgB,KAAK;AAAA,IAChD,SACW,OAAO;AACV,aAAO;AAAA,IACf;AAAA,EACA;AACA,UAAA,WAAmBA;AAiBnB,WAAS,aAAa,SAAS,QAAW;AACtC,aAAS,WAAW,QAAQ,WAAW,SAAS,UAAS,GAAIN,SAAQ,YAAY,GAAG,IAAI,EAAE,SAAQ;AAClG,WAAO,CAAC,WAAW,IAAI,OAAO;AAAA,EAClC;AACA,UAAA,UAAkB,QAAQ;;;;AC9H1B,MAAIH,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAAA,EAC3D;AACA,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,WAAmB,yBAAyB,QAAA,OAAe,QAAA,OAAe,QAAA,KAAa;AACvF,QAAMF,uBAAsBC,iBAAgBP,mBAAmC;AAC/E,QAAMU,WAAUC;AAQhB,QAAMC,MAAK,CAAC,UAAU;AAClB,UAAM,OAAM,GAAIF,SAAQ,YAAY,OAAO,IAAI,EAAE,aAAa,MAAM,aAAa,KAAI,CAAE;AACvF,UAAM,aAAa,IAAI,MAAM,EAAE,EAAE,QAAO,EAAG,KAAK,EAAE;AAClD,UAAM,QAAO,GAAIA,SAAQ,0BAA0B,YAAY,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC;AAClG,UAAM,MAAM,iBAAiB,IAAI;AACjC,UAAM,QAAO,GAAIA,SAAQ,0BAA0B,MAAM,YAAY,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC;AACxG,UAAMI,OAAM,iBAAiB,IAAI;AACjC,WAAO,GAAG,GAAG,GAAGA,IAAG;AAAA,EACvB;AACA,UAAA,KAAaF;AAOb,QAAMH,QAAO,CAAC,WAAU,GAAIC,SAAQ,WAAW,OAAO,sBAAsB;AAC5E,UAAA,OAAeD;AAQf,QAAMQ,QAAO,CAAC,WAAW,UAAU;AAC/B,UAAM,OAAM,GAAIP,SAAQ,YAAY,IAAI,IAAI;AAC5C,UAAM,MAAM,GAAG,GAAG,IAAG,GAAI,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC;AACjD,QAAI;AACA,cAAO,GAAI,QAAQ,MAAM,GAAG;AAChC,WAAO;AAAA,EACX;AACA,UAAA,OAAeO;AASf,QAAMF,kBAAiB,CAAC,UAAU;AAC9B,UAAM,OAAM,GAAIL,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC3C,aAAa;AAAA,MACb,oBAAoB;AAAA,IAC5B,CAAK;AACD,SAAI,GAAI,QAAQ,IAAI,GAAG,MAAM,IAAI,UAAU,IAAI,EAAE,GAAG;AAChD,YAAMJ,qBAAoB,QAAQ;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AACA,UAAA,iBAAyBS;AAQzB,QAAMC,YAAW,CAAC,UAAU;AACxB,QAAI;AACA,cAAQ,GAAG,QAAQ,gBAAgB,KAAK;AAAA,IAChD,SACW,OAAO;AACV,aAAO;AAAA,IACf;AAAA,EACA;AACA,UAAA,WAAmBA;AACnB,UAAA,UAAkB,QAAQ;AAC1B,WAAS,iBAAiB,KAAK;AAC3B,UAAM,OAAO,KAAM,MAAM;AACzB,UAAM,aAAa;AAAA,MACf,EAAE,MAAM,IAAI,IAAI,EAAC;AAAA,MACjB,EAAE,MAAM,IAAI,IAAI,EAAC;AAAA,IACzB;AACI,UAAM,eAAe,WAAW,KAAK,CAAC,SAAS,KAAK,SAAS,IAAI;AACjE,WAAO,CAAC,eAAe,OAAO,aAAa;AAAA,EAC/C;;;;AC/GA,MAAIT,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAAA,EAC3D;AACA,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,WAAmB,yBAAyB,QAAA,OAAe,QAAA,OAAe,QAAA,KAAa;AACvF,QAAMF,uBAAsBC,iBAAgBP,mBAAmC;AAC/E,QAAMU,WAAUC;AAQhB,QAAMC,MAAK,CAAC,UAAU;AAClB,UAAM,OAAM,GAAIF,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC3C,aAAa;AAAA,MACb,aAAa;AAAA,IACrB,CAAK;AACD,UAAM,OAAM,GAAIA,SAAQ,0BAA0B,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACrF,WAAO,QAAO,GAAIA,SAAQ,SAAS,GAAG,CAAC;AAAA,EAC3C;AACA,UAAA,KAAaE;AAOb,QAAMH,QAAO,CAAC,WAAU,GAAIC,SAAQ,WAAW,OAAO,gBAAgB;AACtE,UAAA,OAAeD;AAOf,QAAMQ,QAAO,CAAC,WAAW,UAAU;AAC/B,UAAM,OAAM,GAAIP,SAAQ,YAAY,IAAI,IAAI;AAC5C,UAAM,MAAM,GAAG,GAAG,IAAG,GAAI,QAAQ,IAAI,GAAG,CAAC;AACzC,QAAI;AACA,cAAO,GAAI,QAAQ,MAAM,GAAG;AAChC,WAAO;AAAA,EACX;AACA,UAAA,OAAeO;AASf,QAAMF,kBAAiB,CAAC,UAAU;AAC9B,UAAM,OAAM,GAAIL,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC3C,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,IAC7B,CAAK;AACD,SAAI,GAAI,QAAQ,IAAI,GAAG,MAAM,IAAI,UAAU,IAAI,EAAE,GAAG;AAChD,YAAMJ,qBAAoB,QAAQ;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AACA,UAAA,iBAAyBS;AAQzB,QAAMC,YAAW,CAAC,UAAU;AACxB,QAAI;AACA,cAAQ,GAAG,QAAQ,gBAAgB,KAAK;AAAA,IAChD,SACW,OAAO;AACV,aAAO;AAAA,IACf;AAAA,EACA;AACA,UAAA,WAAmBA;AACnB,UAAA,UAAkB,QAAQ;;;;AChF1B,MAAIT,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAAA,EAC3D;AACA,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,WAAmB,yBAAyB,QAAA,OAAe,QAAA,OAAe,QAAA,KAAa;AACvF,QAAMF,uBAAsBC,iBAAgBP,mBAAmC;AAC/E,QAAMU,WAAUC;AAQhB,QAAMC,MAAK,CAAC,UAAU;AAClB,QAAI,CAAC;AACD,YAAMN,qBAAoB,QAAQ;AACtC,UAAMgB,cAAa,OAAO,KAAK,EAC1B,QAAQ,aAAa,EAAE,EACvB,SAAS,GAAG,GAAG,EACf,UAAU,GAAG,CAAC;AACnB,UAAM,OAAM,GAAIZ,SAAQ,0BAA0BY,aAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtF,UAAM,OAAO,MAAM;AAEnB,UAAM,gBAAgB;AAAA,MAClB,EAAE,MAAM,GAAG,IAAI,EAAC;AAAA,MAChB,EAAE,MAAM,GAAG,IAAI,EAAC;AAAA,IACxB;AACI,UAAM,YAAY,cAAc,KAAK,CAAC,SAAS,KAAK,SAAS,IAAI;AACjE,UAAM,KAAK,YAAY,UAAU,KAAK,KAAK;AAC3C,WAAO,OAAO,EAAE;AAAA,EACpB;AACA,UAAA,KAAaV;AAOb,QAAMH,QAAO,CAAC,UAAU,OAAO,KAAK,EAAE,kBAAiB;AACvD,UAAA,OAAeA;AAOf,QAAMQ,QAAO,CAAC,WAAW,UAAU;AAC/B,UAAM,OAAM,GAAIP,SAAQ,YAAY,GAAG,IAAI;AAC3C,UAAMY,cAAa,IAAG,GAAIZ,SAAQ,cAAY,CAAG,OAAOA,SAAQ,cAAY,CAAG,GAAG,GAAG,IAAG,GAAI,QAAQ,IAAI,GAAG,CAAC;AAC5G,QAAI;AACA,cAAO,GAAI,QAAQ,MAAMY,WAAU;AACvC,WAAOA;AAAA,EACX;AACA,UAAA,OAAeL;AASf,QAAMF,kBAAiB,CAAC,UAAU;AAC9B,QAAI,CAAC,gCAAgC,KAAK,OAAO,KAAK,CAAC,GAAG;AACtD,YAAM,IAAI,MAAM,8CAA8C;AAAA,IACtE;AACI,UAAMO,kBAAiBZ,SAAQ,YAAY,MAAM,UAAU,GAAG,EAAE,GAAG,CAAC;AACpE,SAAI,GAAI,QAAQ,IAAI,MAAM,UAAU,GAAG,EAAE,CAAC,MAAMY,YAAW,UAAU,GAAG,CAAC,GAAG;AACxE,YAAMhB,qBAAoB,QAAQ;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AACA,UAAA,iBAAyBS;AAQzB,QAAMC,YAAW,CAAC,UAAU;AACxB,QAAI;AACA,cAAQ,GAAG,QAAQ,gBAAgB,KAAK;AAAA,IAChD,SACW,OAAO;AACV,aAAO;AAAA,IACf;AAAA,EACA;AACA,UAAA,WAAmBA;AACnB,UAAA,UAAkB,QAAQ;;;;AClG1B,MAAIT,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAAA,EAC3D;AACA,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,WAAmB,yBAAyB,QAAA,OAAe,QAAA,OAAe,QAAA,KAAa;AACvF,QAAMF,uBAAsBC,iBAAgBP,mBAAmC;AAC/E,QAAMU,WAAUC;AAQhB,QAAMC,MAAK,CAAC,UAAU;AAClB,UAAMW,YAAU,GAAIb,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC/C,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,aAAa;AAAA,IACrB,CAAK;AACD,UAAM,QAAO,GAAIA,SAAQ,0BAA0Ba,UAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI;AAC9F,UAAM,MAAM,OAAO,MAAM,KAAK,IAAI,OAAO;AACzC,WAAO,GAAG,GAAG;AAAA,EACjB;AACA,UAAA,KAAaX;AAOb,QAAMH,QAAO,CAAC,WAAU,GAAIC,SAAQ,WAAW,OAAO,cAAc;AACpE,UAAA,OAAeD;AAOf,QAAMQ,QAAO,CAAC,WAAW,UAAU;AAC/B,UAAM,SAAQ,GAAIP,SAAQ,YAAY,IAAI,IAAI;AAC9C,UAAMa,WAAU,GAAG,KAAK,IAAG,GAAI,QAAQ,IAAI,KAAK,CAAC;AACjD,QAAI;AACA,cAAO,GAAI,QAAQ,MAAMA,QAAO;AACpC,WAAOA;AAAA,EACX;AACA,UAAA,OAAeN;AASf,QAAMF,kBAAiB,CAAC,UAAU;AAC9B,UAAMQ,YAAU,GAAIb,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC/C,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,IAC7B,CAAK;AACD,SAAI,GAAI,QAAQ,IAAIa,QAAO,MAAMA,SAAQ,UAAU,IAAI,EAAE,GAAG;AACxD,YAAMjB,qBAAoB,QAAQ;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AACA,UAAA,iBAAyBS;AAQzB,QAAMC,YAAW,CAAC,UAAU;AACxB,QAAI;AACA,cAAQ,GAAG,QAAQ,gBAAgB,KAAK;AAAA,IAChD,SACW,OAAO;AACV,aAAO;AAAA,IACf;AAAA,EACA;AACA,UAAA,WAAmBA;AACnB,UAAA,UAAkB,QAAQ;;;;AClE1B,MAAIT,mBAAmBC,kBAAQA,eAAK,mBAAoB,SAAU,KAAK;AACnE,WAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAG;AAAA,EAC3D;AACA,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,WAAmB,yBAAyB,QAAA,OAAe,QAAA,OAAe,QAAA,KAAa;AACvF,QAAMF,uBAAsBC,iBAAgBP,mBAAmC;AAC/E,QAAMU,WAAUC;AAQhB,QAAMC,MAAK,CAAC,UAAU;AAClB,UAAM,UAAS,GAAIF,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC9C,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,aAAa;AAAA,IACrB,CAAK;AACD,UAAM,QAAO,GAAIA,SAAQ,0BAA0B,OAAO,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACnG,UAAM,MAAM,OAAO,MAAM,KAAK,IAAI,OAAO;AACzC,UAAM,QAAO,GAAIA,SAAQ,0BAA0B,OAAO,UAAU,GAAG,EAAE,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;AAC3F,UAAMI,OAAM,OAAO,MAAM,KAAK,IAAI,OAAO;AACzC,WAAO,GAAG,GAAG,GAAGA,IAAG;AAAA,EACvB;AACA,UAAA,KAAaF;AAOb,QAAMH,QAAO,CAAC,WAAU,GAAIC,SAAQ,WAAW,OAAO,gBAAgB;AACtE,UAAA,OAAeD;AAOf,QAAMQ,QAAO,CAAC,WAAW,UAAU;AAC/B,UAAM,OAAM,GAAIP,SAAQ,YAAY,GAAG,IAAI;AAC3C,UAAM,MAAM,KAAK,OAAM,IAAK,KAAK,GAAG,QAAQ,CAAC,EAAE,SAAS,GAAG,GAAG;AAC9D,UAAM,SAAS,GAAG,GAAG,GAAG,EAAE,IAAG,GAAI,QAAQ,IAAI,MAAM,EAAE,CAAC;AACtD,QAAI;AACA,cAAO,GAAI,QAAQ,MAAM,MAAM;AACnC,WAAO;AAAA,EACX;AACA,UAAA,OAAeO;AASf,QAAMF,kBAAiB,CAAC,UAAU;AAC9B,UAAM,UAAS,GAAIL,SAAQ,YAAY,OAAO,IAAI;AAAA,MAC9C,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,IAC7B,CAAK;AACD,SAAI,GAAI,QAAQ,IAAI,MAAM,MAAM,OAAO,UAAU,IAAI,EAAE,GAAG;AACtD,YAAMJ,qBAAoB,QAAQ;AAAA,IAC1C;AACI,WAAO;AAAA,EACX;AACA,UAAA,iBAAyBS;AAQzB,QAAMC,YAAW,CAAC,UAAU;AACxB,QAAI;AACA,cAAQ,GAAG,QAAQ,gBAAgB,KAAK;AAAA,IAChD,SACW,OAAO;AACV,aAAO;AAAA,IACf;AAAA,EACA;AACA,UAAA,WAAmBA;AACnB,UAAA,UAAkB,QAAQ;;;AC5I1B,SAAO,eAAc,SAAU,cAAc,EAAE,OAAO,MAAM;AAC5D,UAAA,UAAkB,QAAA,kBAA0B,QAAA,YAAoB,QAAA,eAAuB,QAAA,QAAgB,QAAA,oBAA4B,gBAAgB,QAAA,SAAiB,QAAA,QAAgB;AACpL,QAAM,QAAQhB;AACd,QAAM,SAASW;AACf,QAAM,QAAQa;AACd,QAAM,oBAAoBC;AAC1B,QAAM,UAAUC;AAChB,QAAM,aAAaC;AACnB,QAAM,eAAeC;AACrB,QAAM,YAAYC;AAClB,QAAM,kBAAkBC;AACxB,QAAM,QAAQ,CAAC,WAAU,GAAI,MAAM,UAAU,KAAK;AAClD,UAAA,QAAgB;AAChB,QAAM,SAAS,CAAC,WAAU,GAAI,OAAO,UAAU,KAAK;AACpD,UAAA,SAAiB;AACjB,QAAM,QAAQ,CAAC,WAAU,GAAI,MAAM,UAAU,KAAK;AAClD,UAAA,QAAgB;AAChB,QAAM,oBAAoB,CAAC,WAAU,GAAI,kBAAkB,UAAU,KAAK;AAC1E,UAAA,oBAA4B;AAC5B,QAAM,QAAQ,CAAC,WAAU,GAAI,WAAW,UAAU,KAAK;AACvD,UAAA,QAAgB;AAChB,QAAM,eAAe,CAAC,WAAU,GAAI,aAAa,UAAU,KAAK;AAChE,UAAA,eAAuB;AACvB,QAAM,YAAY,CAAC,WAAU,GAAI,UAAU,UAAU,KAAK;AAC1D,UAAA,YAAoB;AACpB,QAAM,kBAAkB,CAAC,WAAU,GAAI,gBAAgB,UAAU,KAAK;AACtE,UAAA,kBAA0B;AAC1B,QAAM,UAAU,CAAC,WAAU,GAAI,QAAQ,UAAU,KAAK;AACtD,UAAA,UAAkB;AAClB,UAAA,UAAkB;AAAA,IACd,OAAO,QAAQ;AAAA,IACf,QAAQ,QAAQ;AAAA,IAChB,OAAO,QAAQ;AAAA,IACf,mBAAmB,QAAQ;AAAA,IAC3B,OAAO,QAAQ;AAAA,IACf,cAAc,QAAQ;AAAA,IACtB,WAAW,QAAQ;AAAA,IACnB,iBAAiB,QAAQ;AAAA,IACzB,SAAS,QAAQ;AAAA,EACrB;;ACtCA,MAAM,EAAA,IAAE5B,KAAA,IAAO,OAAO,GAAG;AACzB,MAAM,EAAA,UAAEC,YAAA,WAAUC,YAAA,IAAc,OAAO,GAAG;AAK1C,MAAM,sBAAsB;AASrB,MAAM,mBAAmB,CAAE;AAAA,EACjC,qBAAqB2B;AAAA,EACrB;AAAA,EACG;AACJ,MAAO;AACN,QAAM,CAAE,SAAS,UAAW,IAAI5B,WAAU,IAAK;AAC/C,QAAM,CAAE,WAAW,YAAa,IAAIA,WAAU,KAAM;AACjD,QAAM,CAAE,YAAY,aAAc,IAAIA,WAAU,KAAM;AACzD,QAAM,CAAE,YAAY,aAAc,IAAIA,WAASD,KAAG,kBAAkB,qBAAqB,CAAC;AACvF,QAAM,CAAE,YAAY,aAAc,IAAIC,WAAS,EAAE;AACpD,QAAM,EAAW,UAAU,SAAS,UAAU,OAAO,SAAA,IAAa,kBAAmB;AAAA,IACpF,UAAU;AAAA,EAAA,CACT;AACF,QAAM,gBAAgB,CAAE,UAAW;AAClC,QAAK,MAAM,OAAQ;AAClB,eAAU,MAAM,MAAM,OAAQ;AAAA,IAC/B,OAAO;AACN,eAAU,EAAG;AAAA,IACd;AACA,eAAY,MAAM,KAAM;AACxB,aAAU,KAAM;AAEV,QAAI,CAAC,MAAM,OAAO,OAAQ;AACtB,iBAAY,IAAK;AAAA,IACrB;AAAA,EACJ;AAEAC,cAAU,MAAM;AAEZ,QAAG,WAAW,QAAQ,OAAO,EAAE,EAAE,SAAS,IAAI;AAC1C,oBAAcF,KAAG,mBAAmB,qBAAqB,CAAC;AAAA,IAC9D,OAAO;AACH,oBAAcA,KAAG,kBAAkB,qBAAqB,CAAC;AAAA,IAC7D;AAEA,QAAG,CAAC,SAAS;AACT,UAAG,CAAC,SAAS;AAET,YAAG,WAAW,QAAQ,OAAO,EAAE,EAAE,SAAS,MAAM,WAAW,QAAQ,OAAO,EAAE,EAAE,SAAS,IAAI;AACvF,mBAASA,KAAG,yCAAyC,qBAAqB,CAAC;AAC3E,uBAAa,IAAI;AAAA,QACrB,WAAW,WAAW,QAAQ,OAAO,EAAE,EAAE,SAAS,IAAI;AAClD,mBAASA,KAAG,wCAAwC,qBAAqB,CAAC;AAC1E,uBAAa,IAAI;AAAA,QACrB;AAAA,MACJ,OAAO;AACH,YAAG,WAAW,QAAQ,OAAO,EAAE,EAAE,UAAU,IAAI;AAE3C,cAAG,CAAC8B,KAAAA,MAAM,UAAU,GAAG;AACnB,qBAAS9B,KAAG,yCAAyC,qBAAqB,CAAC;AAC3E,yBAAa,IAAI;AAAA,UACrB,OAAO;AACH,0BAAc,IAAI;AAAA,UACtB;AAAA,QACJ,WAAU,WAAW,QAAQ,OAAO,EAAE,EAAE,UAAU,IAAI;AAElD,cAAG,CAAC+B,KAAAA,OAAO,UAAU,GAAG;AACpB,qBAAS/B,KAAG,0CAA0C,qBAAqB,CAAC;AAC5E,yBAAa,IAAI;AAAA,UACrB,OAAO;AACH,0BAAc,IAAI;AAAA,UACtB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,OAAO;AACH,mBAAa,KAAK;AAClB,oBAAc,KAAK;AAAA,IACvB;AAAA,EAGJ,GAAG,CAAC,YAAY,OAAO,CAAC;AAExBE,cAAU,MAAM;AACZ,iBAAa,KAAK;AAClB,kBAAc,KAAK;AACnB,aAAS,EAAE;AAAA,EACf,GAAG,CAAC,UAAU,CAAC;AAEf,QAAM,oBAAoB,CAAC,KAAK,MAAM;AAClC,WAAO,IAAI,QAAQ,OAAO,EAAE,EAAE,SAAS,KAAK,uBAAuB;AAAA,EACvE;AAGAA,cAAU,MAAM;AAEZ,QAAG,OAAO,OAAO,kBAAkB,EAAE,SAAS,YAAY;AAEtD,aAAO,kBAAkB,EAAE,KAAK,mBAAmB;AAAA,QAC/C,YAAY,SAAS,KAAK,GAAG,OAAO8B,UAAS;AACzC,gBAAM,KAAK,kBAAkB,MAAM,CAAA,GAAI,SAAS,GAAGA,QAAO;AAAA,QAC9D;AAAA,MAAA,CACH;AAAA,IAEL,OAAO;AACH,cAAQ,IAAI,gDAAgD;AAAA,IAChE;AAAA,EAEJ,GAAG,CAAA,CAAE;AAER,SACCC,kCAAAA,IAAAC,kBAAAA,UAAA,EACU,UAAAD,kCAAAA,IAAC,OAAA,EAAI,WAAU,4BACX,UAAAE,kCAAAA,KAAC,OAAA,EAAI,WAAW,gHAAgH,YAAY,CAAC,UAAU,eAAe,KAClK,UAAA;AAAA,IAAAF,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACG,MAAK;AAAA,QACL,IAAG;AAAA,QACH,MAAM,MAAM,cAAc;AAAA,QAC1B,WAAY,uBAAuB,UAAU,wBAAwB,OAAO,YAAY,aAAa,OAAO,aAAa,WAAW;AAAA,QACpI,QAAS,MAAM,SAAU,SAAS,KAAM;AAAA,QACxC,SAAU,MAAM,SAAU,SAAS,IAAK;AAAA,QACxC,UAAW;AAAA,QACX,SAAU,CAAA,MAAK,cAAc,EAAE,OAAO,KAAK;AAAA,QAC3C,cAAa;AAAA,QACb,UAAQ;AAAA,QACR,OAAK;AAAA,MAAA;AAAA,IAAA;AAAA,IAETA,kCAAAA,IAAC,SAAA,EAAM,SAAQ,qCAAsC,UAAA,YAAY;AAAA,IACjEA,kCAAAA,IAACJ,uBAAA,EAAqB,cAAe,MAAA,CAAQ;AAAA,EAAA,EAAA,CACjD,GACJ,GACV;AAEF;AC1IA,MAAM,EAAE,GAAA,IAAO,OAAO,GAAG;AACzB,MAAM,EAAE,UAAU,UAAA,IAAc,OAAO,GAAG;AAC1C,MAAM,EAAE,eAAA,IAAmB,OAAO,GAAG;AAQrC,MAAM,EAAE,sBAAA,IAA0B,OAAO,GAAG;AAC5C,MAAM,EAAE,qBAAA,IAA0B,OAAO,GAAG;AAC5C,MAAM,EAAE,WAAA,IAAkB,OAAO,GAAG;AAGpC,MAAM,cAAgB,WAAY,qBAAqB,EAAG;AAC1D,MAAM,kBAAmB,GAAI,gBAAgB,qBAAsB;AACnE,MAAM,QAAW,eAAgB,YAAY,KAAM,KAAK;AAExD,MAAM,UAAU,CAAE,UAAW;AAE5B,MAAI,OAAO,OAAO,eAAe,CAAC,GAAG,kBAAkB;AACtD,YAAQ,MAAM,2FAA2F;AACzG;AAAA,EACD;AAEA,MAAI,OAAO,OAAO,eAAe,CAAC,GAAG,gBAAgB;AACpD,YAAQ,MAAM,2FAA2F;AACzG;AAAA,EACD;AAEA,QAAM,EAAE,mBAAmB,aAAA,IAAiB;AAC5C,QAAM,EAAE,mBAAmB;AAGxB,QAAM,CAAE,OAAO,QAAS,IAAI,SAAS,EAAE;AACvC,QAAM,CAAE,WAAW,YAAa,IAAI,SAAS,EAAE;AAElD,YAAW,MAAM;AAChB,UAAM,cAAc,eAAgB,YAAY;AAI/C,YAAM,gBAAgB;AACtB,YAAM,uBAAuB,CAAC,CAAE,cAAc;AAC9C,YAAM,yBAAyB,MAAM,MAAM,cAAc;AAEzD,UAAK,sBAAuB;AAC3B,eAAO;AAAA,UACN,MAAM,aAAa,cAAc;AAAA,UACjC,MAAM;AAAA,YACL,mBAAmB;AAAA,cAClB,CAAE,sBAAuB,GAAG;AAAA,YAAA;AAAA,UAC7B;AAAA,QACD;AAAA,MAEF;AAEA,aAAO;AAAA,QACN,MAAM,aAAa,cAAc;AAAA,QACjC,SAAS;AAAA,MAAA;AAAA,IAEX,CAAE;AAEF,WAAO,MAAM;AACZ,kBAAA;AAAA,IACD;AAAA,EACD,GAAG;AAAA,IACF;AAAA,IACA,aAAa,cAAc;AAAA,IAC3B,aAAa,cAAc;AAAA,IAC3B;AAAA,EAAA,CACC;AAEF,QAAM,WAAW,CAAE,iBAAkB;AACpC,QAAK,aAAa,OAAQ;AACzB,cAAQ,IAAI,yBAAyB;AAAA,IACtC;AAEA,aAAS,aAAa,OAAO,MAAM,QAAQ,OAAO,EAAE,CAAC;AAAA,EACtD;AAEA,SACCM,kCAAAA,KAAAD,4BAAA,EACC,UAAA;AAAA,IAAAD,sCAAAC,kBAAAA,UAAA,EAAG,UAAA,eAAgB,MAAM,sBAAsB,EAAG,GAAE;AAAA,IACpDD,kCAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACA,aAAc,MAAM;AAAA,QACpB;AAAA,QACA,qBAAsB;AAAA,MAAA;AAAA,IAAA;AAAA,EACvB,GACD;AACF;AAEA,MAAM,QAAQ,CAAE,UAAW;AAC1B,QAAM,EAAE,uBAAuB,MAAM;AAErC,SAAOA,kCAAAA,IAAC,oBAAA,EAAmB,MAAO,MAAA,CAAQ;AAC3C;AAGA,MAAM,cAAc;AAAA,EACnB,MAAM;AAAA,EACN,6CAAQ,OAAA,EAAM;AAAA,EACd,SAASA,kCAAAA,IAAC,SAAA,EAAQ,aAAY,gBAAe,oBAAqB,YAAY,aAAc;AAAA,EAC5F,MAAMA,kCAAAA,IAAC,SAAA,EAAQ,aAAY,gBAAe,oBAAqB,YAAY,aAAc;AAAA,EACzF,gBAAgB,MAAM;AAAA,EACtB,WAAW;AAAA,EACX,iBAAiB;AAAA,EACjB,UAAU;AAAA,IACT,UAAU,YAAY;AAAA,EAAA;AAExB;AAGA,MAAM,iBAAmB,WAAY,wBAAwB,EAAG;AAChE,MAAM,qBAAsB,GAAI,mBAAmB,qBAAsB;AAClD,eAAgB,eAAe,KAAM,KAAK;AAoBjE,IAAI,OAAO,OAAO,GAAG,qBAAqB,aAAa;AACnD,wBAAsB,WAAW;AAErC;","x_google_ignoreList":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16]}