{"version":3,"file":"backend.min.js","sources":["../../src/js/interface/backend.js"],"sourcesContent":["jQuery(document).ready( function($){\n\t\n\t// Deal with dismissable notices\n\t$( '.paghiper-dismiss-notice' ).on( 'click', '.notice-dismiss', function() {\n\t\tlet noticeId = $(this).parent().data('notice-id');\n\t\tvar data = {\n\t\t\taction: 'paghiper_dismiss_notice',\n\t\t\tnotice: noticeId\n\t\t};\n\t\t\n\t\t$.post( notice_params.ajaxurl, data, function() {\n\t\t});\n\t});\n\n\t$( '.paghiper-notice' ).on( 'click', '.ajax-action', function() {\n\n\t\tlet noticeId \t\t= $(this).data('notice-key'),\n\t\t\tnoticeAction \t= $(this).data('action');\n\n\t\tvar data = {\n\t\t\t'action'\t: 'paghiper_answer_notice',\n\t\t\t'noticeId'\t: noticeId,\n\t\t\t'userAction': noticeAction\n\t\t};\n\t\t\n\t\t$.post( notice_params.ajaxurl, data, function() {\n\t\t});\n\n\t\t$(\".paghiper-review-nag\").hide();\n\n\t});\n\n\t// Provides maskable fields for date operations\n\tif(typeof $.fn.mask === 'function') {\n\t\t$(\".date\").mask(\"00/00/0000\", {placeholder: \"__/__/____\", clearIfNotMatch: true});\n\t}\n\n\t// Copy Transaction ID to clipboard\n\t$('.paghiper-copy-transaction-id').on('click', function() {\n\t\tconst transactionId = $(this).data('transaction-id');\n\t\tif (transactionId) {\n\t\t\tcopyTextToClipboard(transactionId);\n\t\t\tshowPhNotification({ message: 'ID da transação copiado!', type: 'success' });\n\t\t}\n\t});\n\n    // --- ODOMETER ROTOR LOGIC ---\n    const container = $('#paghiper-due-date-container');\n    if (container.length) {\n\n        // The hidden input that stores the final calculated value in minutes.\n        const valueInput = $('#woo_paghiper_expiration_date');\n\n        /**\n         * Manages the animation and state of a single digit rotor in the odometer.\n         */\n        class OdometerDigit {\n            constructor(initialValue) {\n                this.element = $('<div class=\"odometer-digit\"></div>');\n                this.currentValue = parseInt(initialValue, 10);\n                \n                this.rotor = $('<div class=\"odometer-rotor\"></div>');\n                // Create the digit strip: 0-9 and then another 0 for wrap-around animation.\n                for (let i = 0; i < 10; i++) {\n                    this.rotor.append($('<div class=\"odometer-digit-value\"></div>').text(i));\n                }\n                this.rotor.append($('<div class=\"odometer-digit-value\"></div>').text(0));\n\n                this.element.append(this.rotor);\n            }\n\n            /**\n             * Sets the initial vertical position of the rotor without animation.\n             */\n            initializePosition() {\n                const digitHeight = this.element.height();\n                if (digitHeight === 0) return;\n                this.rotor.css({ transition: 'none', transform: `translateY(-${this.currentValue * digitHeight}px)` });\n            }\n\n            /**\n             * Animates the rotor to a new digit value.\n             * @param {number} newValue The new digit (0-9).\n             * @param {number} direction The direction of the change (1 for up, -1 for down).\n             */\n            setValue(newValue, direction) {\n                if (newValue === this.currentValue) return;\n\n                const digitHeight = this.element.height();\n                if (digitHeight === 0) return;\n                const rotor = this.rotor;\n\n                const isWrappingUp = this.currentValue === 9 && newValue === 0 && direction > 0;\n                const isWrappingDown = this.currentValue === 0 && newValue === 9 && direction < 0;\n\n                if (isWrappingUp) {\n                    // Animate to the 10th frame (which shows '0')\n                    rotor.css({ transition: 'transform 0.4s ease-in-out' });\n                    rotor.css({ transform: `translateY(-${10 * digitHeight}px)` });\n                    // After animation, reset to the top '0' frame without animation\n                    setTimeout(() => {\n                        rotor.css({ transition: 'none', transform: 'translateY(0px)' });\n                    }, 400);\n                } else if (isWrappingDown) {\n                    // Jump to the bottom '0' frame without animation to prepare for animating \"up\"\n                    rotor.css({ transition: 'none', transform: `translateY(-${10 * digitHeight}px)` });\n                    // Then, with a tiny delay, animate \"up\" to the 9th frame\n                    setTimeout(() => {\n                        rotor.css({ transition: 'transform 0.4s ease-in-out' });\n                        rotor.css({ transform: `translateY(-${9 * digitHeight}px)` });\n                    }, 20);\n                } else {\n                    // Normal transition\n                    rotor.css({ transition: 'transform 0.4s ease-in-out' });\n                    rotor.css({ transform: `translateY(-${newValue * digitHeight}px)` });\n                }\n\n                this.currentValue = newValue;\n            }\n        }\n\n        /**\n         * Manages a complete odometer display for a unit (e.g., days, hours, minutes).\n         * Handles dynamic digit expansion, user clicks for direct editing, and value changes.\n         */\n        class OdometerDisplay {\n            static LIMITS = {\n                'pix-days':    { min: 0, max: 400,  wrap: true },\n                'hours':       { min: 0, max: 23, wrap: true },\n                'minutes':     { min: 0, max: 59, wrap: true }\n            };\n\n            constructor(element, initialValue, type) {\n                this.container = $(element);\n                this.config = OdometerDisplay.LIMITS[type];\n                this.value = Math.max(this.config.min, Math.min(initialValue, this.config.max));\n                this.digits = [];\n                this.isEditing = false;\n                \n                this.wrapper = $('<div class=\"odometer-display\"></div>');\n                this.container.html(this.wrapper);\n                \n                const minDigits = 2;\n                const valueStr = this.value.toString().padStart(minDigits, '0');\n\n                for (let i = 0; i < valueStr.length; i++) {\n                    const digit = new OdometerDigit(valueStr[i]);\n                    this.digits.push(digit);\n                    this.wrapper.append(digit.element);\n                    digit.initializePosition();\n                }\n                // Set initial class based on the number of digits.\n                if (this.digits.length === 3) {\n                    this.wrapper.addClass('has-three-digits');\n                } else {\n                    this.wrapper.removeClass('has-three-digits');\n                }\n\n                // Make the display clickable to enable editing.\n                this.wrapper.on('click', () => {\n                    if (!this.isEditing) {\n                        this.showInput();\n                    }\n                });\n            }\n\n            /**\n             * Hides the odometer display and shows a number input for direct editing.\n             */\n            showInput() {\n\n                let wrapperWidth = this.wrapper.outerWidth(),\n                    wrapperHeight = this.wrapper.outerHeight();\n\n                this.isEditing = true;\n                this.wrapper.hide();\n                const input = $('<input type=\"number\" class=\"odometer-input\" />');\n                \n                // Apply some basic styling to make the input fit in.\n                input.css({\n                    'width': wrapperWidth + 'px',\n                    'height': wrapperHeight + 'px',\n                    'font-size': '1.8em',\n                    'text-align': 'center',\n                    'border': '1px solid #999',\n                    'background-color': '#fff',\n                    'box-sizing': 'border-box',\n                    'margin': 0,\n                    'padding': 0,\n                });\n\n                input.val(this.value);\n                this.container.append(input);\n                input.focus().select();\n\n                const ghost = $('<span style=\"display:none\"></span>');\n                ghost.css({\n                    'font-size': input.css('font-size'),\n                    'font-family': input.css('font-family'),\n                });\n                $('body').append(ghost);\n\n                input.on('input', function() {\n                    ghost.text($(this).val());\n                    $(this).css('width', ghost.width() + 10 + 'px');\n                }).trigger('input');\n\n                // Creates a handler function to process the user's input.\n                const handleInput = () => {\n                    let newValue = parseInt(input.val(), 10);\n\n                    // Validate the entered value, clamping it within the min/max limits.\n                    if (isNaN(newValue)) {\n                        newValue = this.value; // Revert if not a number\n                    } else {\n                        newValue = Math.max(this.config.min, Math.min(newValue, this.config.max));\n                    }\n\n                    input.remove();\n                    this.wrapper.show();\n                    this.isEditing = false;\n\n                    // If the value changed, update the display and the total minutes.\n                    if (newValue !== this.value) {\n                        const direction = newValue > this.value ? 1 : -1;\n                        this.setValue(newValue, direction);\n                        enforceMaxLimit();\n                        updateTotalMinutes();\n                    }\n                };\n\n                // Handlers for when the input is submitted or cancelled.\n                input.on('blur', handleInput);\n                input.on('keydown', (e) => {\n                    if (e.key === 'Enter') {\n                        handleInput();\n                    } else if (e.key === 'Escape') {\n                        input.remove();\n                        this.wrapper.show();\n                        this.isEditing = false;\n                    }\n                });\n            }\n\n            /**\n             * Sets the display to a new value, handling animations and dynamic digit resizing.\n             * @param {number} newValue The new integer value for the display.\n             * @param {number} direction The direction of change for animation purposes (1 for up, -1 for down).\n             */\n            setValue(newValue, direction) {\n                if (newValue === this.value) return;\n\n                const minDigits = 2;\n                const oldStr = this.value.toString();\n                const newStr = newValue.toString();\n                const oldLen = this.digits.length; // Use the actual number of digits\n                const newLen = Math.max(minDigits, newStr.length);\n\n                // Add or remove digit elements if the number of digits has changed.\n                if (newLen > oldLen) {\n                    for (let i = oldLen; i < newLen; i++) {\n                        const digit = new OdometerDigit('0');\n                        this.digits.unshift(digit);\n                        this.wrapper.prepend(digit.element);\n                        digit.initializePosition();\n                    }\n                } else if (newLen < oldLen) {\n                    for (let i = newLen; i < oldLen; i++) {\n                        this.digits[0].element.remove();\n                        this.digits.shift();\n                    }\n                }\n\n                // Add/remove class based on the number of digits.\n                if (newLen === 3) {\n                    this.wrapper.addClass('has-three-digits');\n                } else {\n                    this.wrapper.removeClass('has-three-digits');\n                }\n\n                // Pad strings to the current number of digits for comparison.\n                const paddedOldStr = oldStr.padStart(this.digits.length, '0');\n                const paddedNewStr = newStr.padStart(this.digits.length, '0');\n\n                // Update each digit individually.\n                for (let i = 0; i < this.digits.length; i++) {\n                    const oldDigit = parseInt(paddedOldStr[i], 10);\n                    const newDigit = parseInt(paddedNewStr[i], 10);\n                    if (oldDigit !== newDigit) {\n                        this.digits[i].setValue(newDigit, direction);\n                    }\n                }\n\n                this.value = newValue;\n            }\n\n            /**\n             * Increments the odometer's value by one, handling wrap-around logic.\n             * @returns {boolean} True if the value wrapped around (e.g., 59 to 0).\n             */\n            increment() {\n                let wrapped = false;\n                let newValue = this.value + 1;\n                if (newValue > this.config.max) {\n                    if (this.config.wrap) {\n                        newValue = this.config.min;\n                        wrapped = true;\n                    } else {\n                        newValue = this.config.max;\n                    }\n                }\n                this.setValue(newValue, 1);\n                return wrapped;\n            }\n\n            /**\n             * Decrements the odometer's value by one, handling wrap-around logic.\n             * @returns {boolean} True if the value wrapped around (e.g., 0 to 59).\n             */\n            decrement() {\n                let wrapped = false;\n                let newValue = this.value - 1;\n                if (newValue < this.config.min) {\n                    if (this.config.wrap) {\n                        newValue = this.config.max;\n                        wrapped = true;\n                    }\n                }\n                this.setValue(newValue, -1);\n                return wrapped;\n            }\n        }\n\n        // Holds the singleton instances of our OdometerDisplay classes.\n        let chronoOdometers = {};\n\n        /**\n         * Calculates the total minutes from all odometers and updates the hidden input field.\n         */\n        function updateTotalMinutes() {\n            const days = chronoOdometers.days.value;\n            const hours = chronoOdometers.hours.value;\n            const minutes = chronoOdometers.minutes.value;\n            const totalMinutes = (days * 24 * 60) + (hours * 60) + minutes;\n            valueInput.val(totalMinutes).trigger('change');\n        }\n\n        /**\n         * Enforces the maximum expiration limit. If the days odometer is at its max value,\n         * this function resets the hours and minutes odometers to 0.\n         */\n        function enforceMaxLimit() {\n            const daysOdometer = chronoOdometers.days;\n            if (daysOdometer.value === daysOdometer.config.max) {\n                if (chronoOdometers.hours.value !== 0) {\n                    chronoOdometers.hours.setValue(0, -1);\n                }\n                if (chronoOdometers.minutes.value !== 0) {\n                    chronoOdometers.minutes.setValue(0, -1);\n                }\n            }\n        }\n\n        /**\n         * Initializes all odometer displays based on the initial expiration datetime value.\n         */\n        function initChronoDisplays() {\n            let initialValues = { days: 0, hours: 0, minutes: 0 };\n            const hiddenInputDate = paghiper_backend_settings.initial_datetime_value; // Get value from localized script\n    \n            if (hiddenInputDate) {\n                // Parse YYYY-MM-DD HH:MM:SS format into a duration from now.\n                const dateParts = hiddenInputDate.match(/(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})/);\n                if (dateParts) {\n                    const year = parseInt(dateParts[1], 10);\n                    const month = parseInt(dateParts[2], 10) - 1; // Month is 0-indexed\n                    const day = parseInt(dateParts[3], 10);\n                    const hours = parseInt(dateParts[4], 10);\n                    const minutes = parseInt(dateParts[5], 10);\n    \n                    const targetDate = new Date(year, month, day, hours, minutes, 0);\n                    const now = new Date();\n                    const diffMs = targetDate.getTime() - now.getTime();\n                    const diffMinutes = Math.round(diffMs / (1000 * 60));\n    \n                    if (diffMinutes > 0) {\n                        initialValues = {\n                            days: Math.floor(diffMinutes / (24 * 60)),\n                            hours: Math.floor((diffMinutes % (24 * 60)) / 60),\n                            minutes: diffMinutes % 60\n                        };\n                    }\n                }\n            }\n    \n            // Create the odometer instances.\n            chronoOdometers.days = new OdometerDisplay($('#cron-days-backend'), initialValues.days, 'pix-days');\n            chronoOdometers.hours = new OdometerDisplay($('#cron-hours-backend'), initialValues.hours, 'hours');\n            chronoOdometers.minutes = new OdometerDisplay($('#cron-minutes-backend'), initialValues.minutes, 'minutes');\n            \n            // Run initial validation and update.\n            enforceMaxLimit();\n            updateTotalMinutes();\n        }\n\n        // Check if we are on the PIX gateway settings page and the due date mode is 'minutes'.\n        if (paghiper_backend_settings.is_pix && paghiper_backend_settings.due_date_mode === 'minutes') {\n            initChronoDisplays();\n\n            // Attach click handlers to the increment/decrement chevron controls.\n            $('#paghiper-due-date-container .chevron-control').on('click', function() {\n                if ($('.odometer-input').length) {\n                    $('.odometer-input').trigger('blur');\n                    return;\n                }\n                const $this = $(this);\n                const unit = $this.data('unit');\n                const action = $this.data('action');\n\n                if (action === 'increment') {\n                    if (chronoOdometers[unit].increment()) { // if the clicked unit wrapped...\n                        if (unit === 'minutes') {\n                            if (chronoOdometers.hours.increment()) { // ...and if hours also wrapped...\n                                chronoOdometers.days.increment(); // ...increment days.\n                            }\n                        } else if (unit === 'hours') {\n                            chronoOdometers.days.increment(); // ...increment days.\n                        }\n                    }\n                } else { // decrement\n                    if (chronoOdometers[unit].decrement()) { // if the clicked unit wrapped...\n                        if (unit === 'minutes') {\n                            if (chronoOdometers.hours.decrement()) { // ...and if hours also wrapped...\n                                chronoOdometers.days.decrement(); // ...decrement days.\n                            }\n                        } else if (unit === 'hours') {\n                            chronoOdometers.days.decrement(); // ...decrement days.\n                        }\n                    }\n                }\n\n                // After changing a value, enforce the max limit and update the total.\n                enforceMaxLimit();\n                updateTotalMinutes();\n            });\n        }\n    }\n\n    // AJAX submission for new due date\n    $('body').on('click', '#paghiper-resend-ajax-button', function(e) {\n        e.preventDefault();\n\n        const button = $(this);\n        const orderId = button.data('order-id');\n        const totalMinutes = $('#woo_paghiper_expiration_date').val();\n\n        const totalHours = totalMinutes / 60;\n\n        if (totalHours > 24) {\n            if (!confirm('A data de vencimento é maior que 24 horas a partir de agora. O cronômetro de contagem regressiva não será exibido no e-mail do cliente. Deseja continuar?')) {\n                return;\n            }\n        }\n\n        button.prop('disabled', true).text('Enviando...');\n\n        const data = {\n            action: 'paghiper_resend_payment',\n            order_id: orderId,\n            total_minutes: totalMinutes,\n            security: $('#paghiper_resend_nonce').val()\n        };\n\n        $.post(ajaxurl, data, function(response) {\n            if (response.success) {\n                showPhNotification({ message: response.data.message, type: 'success' });\n                setTimeout(() => window.location.reload(), 2000);\n            } else {\n                showPhNotification({ message: response.data.message, type: 'error' });\n            }\n            button.prop('disabled', false).text('Definir e Reenviar');\n        }).fail(function() {\n            showPhNotification({ message: 'Ocorreu um erro inesperado. Tente novamente.', type: 'error' });\n            button.prop('disabled', false).text('Definir e Reenviar');\n        });\n    });\n\n});\n\n/**\n * Copia um texto para a área de transferência de forma robusta.\n * @param {string} text O texto a ser copiado.\n * @returns {Promise<boolean>} Retorna true se bem-sucedido, e false caso contrário.\n */\nasync function copyTextToClipboard(text) {\n  if (navigator.clipboard && window.isSecureContext) {\n    try {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } catch (err) {\n      console.error('Falha ao copiar com a API moderna: ', err);\n    }\n  }\n\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  textArea.style.position = \"fixed\";\n  textArea.style.top = \"-9999px\";\n  textArea.style.left = \"-9999px\";\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  let success = false;\n  try {\n    success = document.execCommand('copy');\n  } catch (err) {\n    console.error('Erro ao tentar copiar com o método de fallback: ', err);\n  }\n\n  document.body.removeChild(textArea);\n  return success;\n}\n\n/**\n * Exibe uma notificação flutuante.\n * @param {object} options Opções para a notificação.\n * @param {string} options.message A mensagem em texto ou HTML.\n * @param {string} [options.type='info'] O tipo de notificação (success, error, info, warning).\n * @param {number} [options.duration=3000] Duração em ms. Se 0, a notificação é fixa.\n * @returns {HTMLElement|null} O elemento da notificação criado ou null.\n */\nfunction showPhNotification(options) {\n  const { message, type = 'info', duration = 3000 } = options;\n  const container = document.getElementById('ph-reusable-notifications');\n  if (!container) return null;\n\n  const notification = document.createElement('div');\n  notification.className = `ph-notification ${type}`;\n  notification.innerHTML = message; // Permite HTML para ícones\n\n  container.appendChild(notification);\n\n  if (duration > 0) {\n    setTimeout(() => {\n      notification.classList.add('fade-out');\n      notification.addEventListener('animationend', () => {\n        notification.remove();\n      });\n    }, duration);\n  }\n\n  return notification;\n}\n\nwindow.copyPaghiperEmv = function() {\n\t// Start with objects to be selected\n\tlet paghiperEmvBlock \t= document.querySelector('.paghiper-pix-code');\n\tlet targetPixCode \t\t= paghiperEmvBlock.querySelector('textarea');\n\tlet targetButton \t\t= paghiperEmvBlock.querySelector('button');\n\n\t// Select the text field\n\ttargetPixCode.select();\n\ttargetPixCode.setSelectionRange(0, 99999); /* For mobile devices */\n  \n\t// Copy the text inside the text field\n\tnavigator.clipboard.writeText(targetPixCode.value);\n\n\t// Store selection range insie button dataset\n\ttargetButton.dataset.originalText = targetButton.innerHTML;\n\ttargetButton.innerHTML = 'Copiado!';\n\n\tsetTimeout(function(targetButton) {\n\t\t// Restore original text from dataset store value\n\t\tlet originalText = targetButton.dataset.originalText;\n\t\ttargetButton.innerHTML = originalText;\n\n\t\t// Remove selection range\n\t\tdocument.getSelection().removeAllRanges();\n\t}, 2000, targetButton,);\n};\n"],"names":["$","data","noticeId","noticeAction","transactionId","copyTextToClipboard","showPhNotification","updateTotalMinutes","days","chronoOdometers","hours","minutes","totalMinutes","valueInput","enforceMaxLimit","daysOdometer","initChronoDisplays","initialValues","hiddenInputDate","dateParts","year","month","day","targetDate","now","diffMs","diffMinutes","OdometerDisplay","OdometerDigit","initialValue","digitHeight","newValue","direction","rotor","isWrappingUp","isWrappingDown","_OdometerDisplay","element","type","valueStr","i","digit","wrapperWidth","wrapperHeight","input","ghost","handleInput","e","minDigits","oldStr","newStr","oldLen","newLen","paddedOldStr","paddedNewStr","oldDigit","newDigit","wrapped","__publicField","$this","unit","button","orderId","response","text","err","textArea","success","options","message","duration","container","notification","paghiperEmvBlock","targetPixCode","targetButton","originalText"],"mappings":"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"}